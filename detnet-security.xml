<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY RFC5226 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7384 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7384.xml">

]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>

<rfc category="info" docName="draft-ietf-detnet-security-13" ipr="trust200902">
  <front>
    <title abbrev="DetNet Security"> Deterministic Networking (DetNet) Security Considerations </title>
    <author fullname="Ethan Grossman" initials="E.A." role="editor" surname="Grossman">
      <organization abbrev="DOLBY">Dolby Laboratories, Inc.</organization>
      <address>
        <postal>
          <street>1275 Market Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94103</code>
          <country>USA</country>
        </postal>
        <phone>+1 415 465 4339</phone>
        <email>ethan@ieee.org</email>
        <uri>http://www.dolby.com</uri>
      </address>
    </author>
    <author fullname="Tal Mizrahi" initials="T." surname="Mizrahi">
      <organization abbrev="HUAWEI">Huawei Network.IO Innovation Lab</organization>
      <address>
        <email>tal.mizrahi.phd@gmail.com</email>
      </address>
    </author>
    <author fullname="Andrew  J. Hacker" initials="A.J." surname="Hacker">
      <organization abbrev="MISTIQ">MistIQ Technologies, Inc</organization>
      <address>
        <postal>
          <street/>
          <city>Harrisburg</city>
          <region>PA</region>
          <code/>
          <country>USA</country>
        </postal>
        <email>ajhacker@mistiqtech.com</email>
      </address>
    </author>
    <date year="2021"/>
    <area>Routing</area>
    <workgroup>Internet Engineering Task Force</workgroup>
    <keyword>DetNet, security</keyword>
    <abstract>
      <t>A DetNet (deterministic network) provides specific performance guarantees to its data
        flows, such as extremely low data loss rates and bounded latency (including bounded latency
        variation, i.e. "jitter"). As a result, securing a DetNet requires that in addition to the
        best practice security measures taken for any mission-critical network, additional security
        measures may be needed to secure the intended operation of these novel service
        properties.</t>
      <t> This document addresses DetNet-specific security considerations from the perspectives of
        both the DetNet system-level designer and component designer. System considerations include
        a threat model, taxonomy of relevant attacks, and associations of threats versus use cases
        and service properties. Component-level considerations include ingress filtering and packet
        arrival time violation detection.</t>
      <t>This document also addresses security considerations specific to the IP and MPLS data plane
        technologies, thereby complementing the Security Considerations sections of those
        documents.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="Introduction" title="Introduction">
      <t>A DetNet can carry data flows for real-time applications with extremely low data loss rates
        and bounded latency. The bounds on latency defined by DetNet (<xref
          target="I-D.ietf-detnet-flow-information-model"/>) include both worst case latency
        (Maximum Latency, Section 5.9.2) and worst case jitter (Maximum Latency Variation, Section
        5.9.3). Deterministic networks have been successfully deployed in real-time Operational
        Technology (OT) applications for some years, however such networks are typically isolated
        from external access, and thus the security threat from external attackers is low. IETF
        Deterministic Networking (DetNet, <xref target="RFC8655"/>) specifies a set of technologies
        that enable creation of deterministic flows on IP-based networks of potentially wide area
        (on the scale of a corporate network), potentially bringing the OT network into contact with
        Information Technology (IT) traffic and security threats that lie outside of a tightly
        controlled and bounded area (such as the internals of an aircraft). </t>
      <t>These DetNet (OT-type) technologies may not have previously been deployed on a wide area
        IP-based network that also carries IT traffic, and thus can present security considerations
        that may be new to IP-based wide area network designers; this document provides insight into
        such system-level security considerations. In addition, designers of DetNet components (such
        as routers) face new security-related challenges in providing DetNet services, for example
        maintaining reliable isolation between traffic flows in an environment where IT traffic
        co-mingles with critical reserved-bandwidth OT traffic; this document also examines security
        implications internal to DetNet components. </t>
      <t>Security is of particularly high importance in DetNet because many of the use cases which
        are enabled by DetNet <xref target="RFC8578"/> include control of physical devices (power
        grid devices, industrial controls, building controls) which can have high operational costs
        for failure, and present potentially attractive targets for cyber-attackers. </t>
      <t>This situation is even more acute given that one of the goals of DetNet is to provide a
        "converged network", i.e. one that includes both IT traffic and OT traffic, thus exposing
        potentially sensitive OT devices to attack in ways that were not previously common (usually
        because they were under a separate control system or otherwise isolated from the IT network,
        for example <xref target="ARINC664P7"/>). Security considerations for OT networks are not a
        new area, and there are many OT networks today that are connected to wide area networks or
        the Internet; this document focuses on the issues that are specific to the DetNet
        technologies and use cases. </t>
      <t> Given the above considerations, securing a DetNet starts with a scrupulously well-designed
        and well-managed engineered network following industry best practices for security at both
        the data plane and controller plane, as well as for any OAM implementation; this is the
        assumed starting point for the considerations discussed herein. Such assumptions also depend
        on the network components themselves upholding the security-related properties that are to
        be assumed by DetNet system-level designers; for example, the assumption that network
        traffic associated with a given flow can never affect traffic associated with a different
        flow is only true if the underlying components make it so. Such properties, which may
        represent new challenges to component designers, are also considered herein. </t>
      <t>In this context we view the "traditional" (i.e. non-time-sensitive) network design and
        management aspects of network security as being primarily concerned with denial-of service
        prevention, i.e. they must ensure that DetNet traffic goes where it's supposed to and that
        an external attacker can't inject traffic that disrupts the delivery timing assurance of the
        DetNet. The time-specific aspects of DetNet security presented here take up where those
        "traditional" design and management aspects leave off. </t>
      <t>However note that "traditional" methods for mitigating (among all the others) denial-of
        service attack (such as throttling) can only be effectively used in a DetNet when their use
        does not compromise the required time-sensitive or behavioral properties required for the OT
        flows on the network. For example, a "retry" protocol is typically not going to be
        compatible with a low-latency (worst-case maximum latency) requirement, however if in a
        specific use case and implementation such a retry protocol is able to meet the timing
        constraints, then it may well be used in that context. Similarly if common security
        protocols such as TLS/DTLS or IPsec are to be used, it must be verified that their
        implementations are able to meet the timing and behavioral requirements of the
        time-sensitive network as implemented for the given use case. An example of "behavioral
        properties" might be that dropping of more than a specific number of packets in a row is not
        acceptable according to the service level agreement.</t>
      <t>The exact security requirements for any given DetNet are necessarily specific to the use
        cases handled by that network. Thus the reader is assumed to be familiar with the specific
        security requirements of their use cases, for example those outlined in the DetNet Use Cases
          <xref target="RFC8578"/> and the Security Considerations sections of the DetNet documents
        applicable to the network technologies in use, for example <xref target="RFC8939"/>).
        Readers can find a general introduction to the DetNet Architecture in <xref target="RFC8655"
        />, the DetNet Data Plane in <xref target="RFC8938"/>, and the Flow Information Model in
          <xref target="I-D.ietf-detnet-flow-information-model"/>.</t>
      <t>The DetNet technologies include ways to: <list style="symbols">
          <t> Assign data plane resources for DetNet flows in some or all of the intermediate nodes
            (routers) along the path of the flow</t>
          <t> Provide explicit routes for DetNet flows that do not dynamically change with the
            network topology in ways that affect the quality of service received by the affected
            flow(s) </t>
          <t> Distribute data from DetNet flow packets over time and/or space to ensure delivery of
            the data in each packet in spite of the loss of a path.</t>
        </list>
      </t>
      <t>This document includes sections considering DetNet component design as well as system
        design. The latter includes threat modeling and analysis, threat impact and mitigation, and
        the association of attacks with use cases (based on the Use Case Common Themes section of
        the DetNet Use Cases <xref target="RFC8578"/>). </t>
      <t>The structure of the threat model and threat analysis sections were originally derived from
          <xref target="RFC7384"/>, which also considers time-related security considerations in IP
        networks. </t>
    </section>
    <section title="Abbreviations and Terminology">
      <t>IT: Information Technology (the application of computers to store, study, retrieve,
        transmit, and manipulate data or information, often in the context of a business or other
        enterprise - <xref target="IT_DEF"/>). </t>
      <t>OT: Operational Technology (the hardware and software dedicated to detecting or causing
        changes in physical processes through direct monitoring and/or control of physical devices
        such as valves, pumps, etc. - <xref target="OT_DEF"/>) </t>
      <t>Component: A component of a DetNet system - used here to refer to any hardware or software
        element of a DetNet which implements DetNet-specific functionality, for example all or part
        of a router, switch, or end system.</t>
      <t>Device: Used here to refer to a physical entity controlled by the DetNet, for example a
        motor.</t>
      <t>Resource Segmentation Used as a more general form for Network Segmentation (the act or
        practice of splitting a computer network into subnetworks, each being a network segment -
          <xref target="RS_DEF"/>) </t>
    </section>

    <section title="Security Considerations for DetNet Component Design">
      <t>As noted above, DetNet provides resource allocation, explicit routes and redundant path
        support. Each of these has associated security implications, which are discussed in this
        section, in the context of component design. Detection, reporting and appropriate action in
        the case of packet arrival time violations are also discussed.</t>

      <section title="Resource Allocation">

        <section title="Inviolable Flows">
          <t>A DetNet system security designer relies on the premise that any resources allocated to
            a resource-reserved (OT-type) flow are inviolable; in other words there is no physical
            possibility within a DetNet component that resources allocated to a given DetNet flow
            can be compromised by any type of traffic in the network; this includes malicious
            traffic as well as inadvertent traffic such as might be produced by a malfunctioning
            component, or due to interactions between components that were not sufficiently tested
            for interoperability. From a security standpoint this is a critical assumption, for
            example when designing against DOS attacks. In other words, with correctly designed
            components and security mechanisms, one can prevent malicious activities from impacting
            other resources.</t>
          <t>However, achieving the goal of absolutely inviolable flows may not be technically or
            economically feasible for any given use case, given the broad range of possible use
            cases (e.g. [reference to DetNet Use Cases RFC8578]) and their associated security
            considerations as outlined in this document. It can be viewed as a continuum of security
            requirements, from isolated ultra-low latency systems that may have little security
            vulnerability (such as an industrial machine) to broadly distributed systems with many
            possible attack vectors and OT security concerns (such as a utility network). Given this
            continuum, the design principle employed in this document is to specify the desired end
            results, without being overly prescriptive in how the results are achieved, reflecting
            the understanding that no individual implementation is likely to be appropriate for
            every DetNet use case. </t>
        </section>

        <section title="Design Trade-Off Considerations in the Use Cases Continuum">
          <t>It is important for the DetNet system designer to understand, for any given DetNet use
            case and its associated security requirements, the interaction and design trade-offs
            that inevitably need to be reconciled between the desired end results and the DetNet
            protocols, as well as the DetNet system and component design. </t>
          <t>For any given component, as designed for any given use case (or scope of use cases), it
            is the responsibility of the component designer to ensure that the premise of inviolable
            flows is supported, to the extent that they deem necessary to support their target use
            cases. </t>
          <t>For example, the component may include traffic shaping and policing at the ingress, to
            prevent corrupted or malicious or excessive packets from entering the network, thereby
            decreasing the likelihood that any traffic will interfere with any DetNet OT flow. The
            component may include integrity protection for some or all of the header fields such as
            those used for flow ID, thereby decreasing the likelihood that a packet whose flow ID
            has been compromised might be directed into a different flow path. The component may
            verify every single packet header at every forwarding location, or only at certain
            points. In any of these cases the component may use dynamic performance analytics [ref
            to DPA section] to cause action to be initiated to address the situation in an
            appropriate and timely manner, either at the data plane or controller plane, or both in
            concert. The component's software and hardware may include measures to ensure the
            integrity of the resource allocation/deallocation process. Other design aspects of the
            component may help ensure that the adverse effects of malicious traffic are more
            limited, for example by protecting network control interfaces, or minimizing cascade
            failures. The component may include features specific to a given use case, such as
            configuration of the response to a given sequential packet loss count. </t>
          <t>Ultimately, due to cost and complexity factors, the security properties of a component
            designed for low-cost systems may be (by design) far inferior to a component with
            similar intended functionality, but designed for highly secure or otherwise critical
            applications, perhaps at substantially higher cost. Any given component is designed for
            some set of use cases and accordingly will have certain limitations on its security
            properties and vulnerabilities. It is thus the responsibility of the system designer to
            assure themselves that the components they use in their design are capable of satisfying
            their overall system security requirements. </t>
        </section>

        <section title="Documenting the Security Properties of a Component">
          <t>In order for the system designer to adequately understand the security related behavior
            of a given component, the designer of any component intended for use with DetNet needs
            to clearly document the security properties of that component. For example, to address
            the case where a corrupted packet in which the flow identification information is
            compromised and thus may incidentally match the flow ID of another ("victim") DetNet
            flow, resulting in additional unauthorized traffic on the victim, the documentation
            might state that the component employs integrity protection on the flow identification
            fields. </t>
        </section>

        <section title="Fail-Safe Component Behavior">
          <t>Even when the security properties of a component are understood and well specified, if
            the component malfunctions, for example due to physical circumstances unpredicted by the
            component designer, it may be difficult or impossible to fully prevent malfunction of
            the network. The degree to which a component is hardened against various types of
            failures is a distinguishing feature of the component and its design, and the overall
            system design can only be as strong as its weakest link. </t>
          <t>However, all networks are subject to this level of uncertainty; it is not unique to
            DetNet. Having said that, DetNet raises the bar by changing many added latency scenarios
            from tolerable annoyances to unacceptable service violations. That in turn underscores
            the importance of system integrity, as well as correct and stable configuration of the
            network and its nodes, as discussed in <xref target="Introduction"/>. </t>
        </section>

        <section title="Flow Aggregation Example">
          <t>As another example regarding resource allocation implementation, consider the
            implementation of Flow Aggregation for DetNet flows (as discussed in <xref
              target="RFC8938"/>). In this example say there are N flows that are to be aggregated,
            thus the bandwidth resources of the aggregate flow must be sufficient to contain the sum
            of the bandwidth reservation for the N flows. However if one of those flows were to
            consume more than its individually allocated bandwidth, this could cause starvation of
            the other flows. Thus simply providing and enforcing the calculated aggregate bandwidth
            may not be a complete solution - the bandwidth for each individual flow must still be
            guaranteed, for example via ingress policing of each flow (i.e. before it is
            aggregated). Alternatively, if by some other means each flow to be aggregated can be
            trusted not to exceed its allocated bandwidth, the same goal can be achieved. </t>
        </section>

      </section>

      <section title="Explicit Routes">
        <t>The DetNet-specific purpose for constraining the ability of the DetNet to re-route OT
          traffic is to maintain the specified service parameters (such as upper and lower latency
          boundaries) for a given flow. For example if the network were to re-route a flow (or some
          part of a flow) based exclusively on statistical path usage metrics, or due to malicious
          activity, it is possible that the new path would have a latency that is outside the
          required latency bounds which were designed into the original TE-designed path, thereby
          violating the quality of service for the affected flow (or part of that flow). </t>
        <t>However, it is acceptable for the network to re-route OT traffic in such a way as to
          maintain the specified latency bounds (and any other specified service properties) for any
          reason, for example in response to a runtime component or path failure. From a security
          standpoint, the system designer relies on the premise that the packets will be delivered
          with the specified latency boundaries; thus any component that is involved in controlling
          or implementing any change of the initially TE-configured flow routes needs to prevent
          malicious or accidental re-routing of OT flows that might adversely affect delivering the
          traffic within the specified service parameters.</t>
      </section>

      <section title="Redundant Path Support">
        <t>The DetNet provision for redundant paths (PREOF) (as defined in the DetNet Architecture
            <xref target="RFC8655"/>) provides the foundation for high reliablity of a DetNet, by
          virtually eliminating packet loss (i.e. to a degree which is implementation-dependent)
          through hitless redundant packet delivery. Note: At the time of this writing, PREOF is not
          defined for the IP data plane. </t>
        <t>It is the responsibility of the system designer to determine the level of reliability
          required by their use case, and to specify redundant paths sufficient to provide the
          desired level of reliability (in as much as that reliability can be provided through the
          use of redundant paths). It is the responsibility of the component designer to ensure that
          the relevant PREOF operations are executed reliably and securely, to avoid potentially
          catastrophic situations for the operational technology relying on them. </t>
        <t>However, note that not all PREOF operations are necessarily implemented in every network;
          for example a packet re-ordering function may not be necessary if the packets are either
          not required to be in order, or if the ordering is performed in some other part of the
          network.</t>
        <t>Ideally a redundant path for a flow could be specified from end to end, however given
          that this is not always possible (as described in <xref target="RFC8655"/>) the system
          designer will need to consider the resulting end-to-end reliability and security resulting
          from any given arrangment of network segments along the path, each of which provides its
          individual PREOF implementation and thus its individual level of reliabiilty and security. </t>
        <t>At the data plane the implementation of PREOF depends on the correct assignment and
          interpretation of packet sequence numbers, as well as the actions taken based on them,
          such as elimination (including elimination of packets with spurious sequence numbers).
          Thus the integrity of these values must be maintained by the component as they are
          assigned by the DetNet Data Plane Service sub-layer, and transported by the Forwarding
          sub-layer. This is no different than the integrity of the values in any header used by the
          DetNet (or any other) data plane, and is not unique to redundant paths. The integrity
          protection of header values is technology-dependent; for example, in Layer 2 networks the
          integrity of the header fields can be protected by using MACsec <xref
            target="IEEE802.1AE-2018"/>. Similary, from the sequence number injection perspective,
          it is no different from any other protocols that use sequence numbers. </t>
      </section>
      <section title="Timing (or other) Violation Reporting">
        <t>Another fundamental assumption of a secure DetNet is that in any case in which an
          incoming packet arrives with any timing or bandwidth violation, an appropriate action can
          be taken in order to prevent damage to the system. For example, a naive approach might be
          to have the component shut down the link if a packet arrives outside of its prescribed
          time window; however such a simplistic action may serve the attacker better than it serves
          the network. This document further discusses such considerations in <xref
            target="DpaMitigation"/>). Some possible violations that warrant detection include cases
          where a packet arrives: </t>
        <t>
          <list style="symbols">
            <t>Outside of its prescribed time window</t>
            <t>Within its time window but with a compromised time stamp that makes it appear that it
              is not within its window</t>
            <t>Exceeding the reserved flow bandwidth</t>
          </list>
        </t>
        <t>Logging of such issues is unlikely to be adequate, since a delay in response to the
          situation could result in material damage, for example to mechanical devices controlled by
          the network. Given that the data plane component probably has no knowledge of the use case
          of the network, or its applications and end systems, it would seem useful for a data plane
          component to allow the system designer to configure its actions in the face of such
          violations.</t>
        <t>Some possible direct actions that may be taken at the data plane include traffic policing
          and shaping functions (e.g., those described in <xref target="RFC2475"/>), separating
          flows into per-flow rate-limited queues, and potentially applying active queue management
            <xref target="RFC7567"/>. However if those (or any other) actions are to be taken, the
          system designer must ensure that the results of such actions do not compromise the
          continued safe operation of the system. For example, the network (i.e. the controller
          plane and data plane working together) must mitigate in a timely fashion any potential
          adverse effect on mechanical devices controlled by the network. </t>

      </section>
    </section>
    <section title="DetNet Security Considerations Compared With DiffServ Security Considerations">
      <t>DetNet is designed to be compatible with DiffServ <xref target="RFC2474"/> as applied to IT
        traffic in the DetNet. DetNet also incorporates the use of the 6-bit value of the DSCP field
        of the Type of Service (ToS) byte of the IPv4 header (or the Traffic Class byte in IPv6) for
        flow identification for OT traffic. However, the DetNet interpretation of the DSCP value for
        OT traffic is not equivalent to the PHB selection behavior as defined by DiffServ. </t>
      <t>Thus security consideration for DetNet have some aspects in common with DiffServ, in fact
        overlapping 100% with respect to IP IT traffic. Security considerations for these aspects
        are part of the existing literature on IP network security, specifically the Security
        Considerations sections of <xref target="RFC2474"/> and <xref target="RFC2475"/>. However
        DetNet also introduces timing and other considerations which are not present in DiffServ, so
        the DiffServ security considerations are necessary but not sufficient for DetNet. </t>
      <t>In the case of DetNet OT traffic, the DSCP value is interpreted differently than in
        DiffServ and contribute to determination of the service provided to the packet. In DetNet,
        there are similar consequences to DiffServ for lack of detection of, or incorrect handling
        of, packets with mismarked DSCP values, and many of the points made in the DiffServ Security
        discussions (<xref target="RFC2475"/> Sec. 6.1 , <xref target="RFC2474"/> Sec. 7 and <xref
          target="RFC6274"/> Sec 3.3.2.1) are also relevant to DetNet OT traffic, though perhaps in
        modified form. For example, in DetNet the effect of an undetected or incorrectly handled
        maliciously mismarked DSCP field in an OT packet is not identical to affecting the PHB of
        that packet, since DetNet does not use the PHB concept for OT traffic; but nonetheless the
        service provided to the packet could be affected, so mitigation measures analogous to those
        prescribed by DiffServ would be appropriate for DetNet. For example, mismarked DSCP values
        should not cause failure of network nodes. The remarks in <xref target="RFC2474"/> regarding
        IPsec and Tunnelling Interactions are also relevant (though this is not to say that other
        sections are less relevant). </t>
    </section>
    <section anchor="ThreatSection" title="Security Threats">
      <t>This section presents a threat model, and analyzes the possible threats in a DetNet-enabled
        network. The threats considered in this section are independent of any specific technologies
        used to implement the DetNet; <xref target="TechnologySpecificThreats"/> considers attacks
        that are associated with the DetNet technologies encompassed by <xref target="RFC8938"/>. </t>
      <t> We distinguish controller plane threats from data plane threats. The attack surface may be
        the same, but the types of attacks as well as the motivation behind them, are different. For
        example, a delay attack is more relevant to data plane than to controller plane. There is
        also a difference in terms of security solutions: the way you secure the data plane is often
        different than the way you secure the controller plane. </t>
      <section title="Threat Model">
        <t>The threat model used in this document employs organizational elements of the threat
          models of <xref target="RFC7384"/> and <xref target="RFC7835"/>. This model classifies
          attackers based on two criteria: </t>
        <t>
          <list style="symbols">
            <t>Internal vs. external: internal attackers either have access to a trusted segment of
              the network or possess the encryption or authentication keys. External attackers, on
              the other hand, do not have the keys and have access only to the encrypted or
              authenticated traffic.</t>
            <t>On-path vs. off-path: on-path attackers are located in a position that allows
              interception and modification of in-flight protocol packets, whereas off-path
              attackers can only attack by generating protocol packets.</t>
          </list>
        </t>
        <t>Care has also been taken to adhere to Section 5 of <xref target="RFC3552"/>, both with
          respect to which attacks are considered out-of-scope for this document, but also which are
          considered to be the most common threats (explored further in <xref
            target="ThreatAnalysis"/>, Threat Analysis). Most of the direct threats to DetNet are
          active attacks (i.e. attacks that modify DetNet traffic), but it is highly suggested that
          DetNet application developers take appropriate measures to protect the content of the
          DetNet flows from passive attacks (i.e. attacks that observe but do not modify DetNet
          traffic) for example through the use of TLS or DTLS. </t>
        <t>DetNet-Service, one of the service scenarios described in <xref
            target="I-D.varga-detnet-service-model"/>, is the case where a service connects DetNet
          islands, i.e. two or more otherwise independent DetNets are connected via a link that is
          not intrinsically part of either network. This implies that there could be DetNet traffic
          flowing over a non-DetNet link, which may provide an attacker with an advantageous
          opportunity to tamper with DetNet traffic. The security properties of non-DetNet links are
          outside of the scope of DetNet Security, but it should be noted that use of non-DetNet
          services to interconnect DetNets merits security analysis to ensure the integrity of the
          networks involved. </t>
      </section>
      <section anchor="ThreatAnalysis" title="Threat Analysis">
        <section anchor="DelayThreat" title="Delay">
          <t>An attacker can maliciously delay DetNet data flow traffic. By delaying the traffic,
            the attacker can compromise the service of applications that are sensitive to high
            delays or to high delay variation. The delay may be constant or modulated.</t>
        </section>
        <section anchor="ModificationThreat" title="DetNet Flow Modification or Spoofing">
          <t>An attacker can modify some header fields of en route packets in a way that causes the
            DetNet flow identification mechanisms to misclassify the flow. Alternatively, the
            attacker can inject traffic that is tailored to appear as if it belongs to a legitimate
            DetNet flow. The potential consequence is that the DetNet flow resource allocation
            cannot guarantee the performance that is expected when the flow identification works
            correctly.</t>
        </section>
        <section anchor="SegmentThreat" title="Resource Segmentation (Inter-segment Attack)">
          <t>An attacker can inject traffic that will consume network resources such that it affects
            DetNet flows. This can be performed using non-DetNet traffic that indirectly affects
            DetNet traffic (hardware resource exhaustion), or by using DetNet traffic from one
            DetNet flow that directly affects traffic from different DetNet flows.</t>
        </section>
        <section anchor="ReplicationThreat" title="Packet Replication and Elimination">
          <section title="Replication: Increased Attack Surface">
            <t>Redundancy is intended to increase the robustness and survivability of DetNet flows,
              and replication over multiple paths can potentially mitigate an attack that is limited
              to a single path. However, the fact that packets are replicated over multiple paths
              increases the attack surface of the network, i.e., there are more points in the
              network that may be subject to attacks.</t>
          </section>
          <section title="Replication-related Header Manipulation">
            <t>An attacker can manipulate the replication-related header fields. This capability
              opens the door for various types of attacks. For example:</t>
            <t>
              <list style="symbols">
                <t>Forward both replicas - malicious change of a packet SN (Sequence Number) can
                  cause both replicas of the packet to be forwarded. Note that this attack has a
                  similar outcome to a replay attack.</t>
                <t>Eliminate both replicas - SN manipulation can be used to cause both replicas to
                  be eliminated. In this case an attacker that has access to a single path can cause
                  packets from other paths to be dropped, thus compromising some of the advantage of
                  path redundancy.</t>
                <t>Flow hijacking - an attacker can hijack a DetNet flow with access to a single
                  path by systematically replacing the SNs on the given path with higher SN values.
                  For example, an attacker can replace every SN value S with a higher value S+C,
                  where C is a constant integer. Thus, the attacker creates a false illusion that
                  the attacked path has the lowest delay, causing all packets from other paths to be
                  eliminated in favor of the attacked path. Once the flow from the compromised path
                  is favored by the elminating bridge, the flow is hijacked by the attacker. It is
                  now posible to either replace en route packets with malicious packets, or simply
                  injecting errors, causing the packets to be dropped at their destination.</t>
                <t>Amplification - an attacker who injects packets into a flow that is to be
                  replicated will have their attack amplified through the replication process. This
                  is no different than any attacker who injects packets that are delivered through
                  multicast, broadcast, or other point-to-multi-point mechanisms. </t>
              </list>
            </t>
          </section>
        </section>
        <section anchor="ControllerThreat" title="Controller Plane">
          <section anchor="PathThreat" title="Path Choice Manipulation">
            <section title="Control or Signaling Packet Modification">
              <t>An attacker can maliciously modify en route control packets in order to disrupt or
                manipulate the DetNet path/resource allocation.</t>
            </section>
            <section title="Control or Signaling Packet Injection">
              <t>An attacker can maliciously inject control packets in order to disrupt or
                manipulate the DetNet path/resource allocation.</t>
            </section>
            <section title="Increased Attack Surface">
              <t>One of the possible consequences of a path manipulation attack is an increased
                attack surface. Thus, when the attack described in the previous subsection is
                implemented, it may increase the potential of other attacks to be performed.</t>
            </section>
          </section>
          <section title="Compromised Controller">
            <t>An attacker can subvert a controller, or enable a compromised controller to falsely
              represent itself as a controller so that the network nodes believe it to be authorized
              to instruct them. </t>
            <t>Presence of compromised nodes in a DetNet is not a new threat that arises as a result
              of determinism or time sensitivity; the same techniques used to prevent or mitigate
              against compromised nodes in any network are equally applicable in the DetNet case.
              However this underscores the requirement for careful system security design in a
              DetNet, given that the effects of even one bad actor on the network can be potentially
              catastrophic. </t>
            <t>Security concerns specific to any given controller plane technology used in DetNet
              will be addressed by the DetNet documents associated with that technology.</t>
          </section>
        </section>
        <section anchor="ReconnaissanceThreat" title="Reconnaissance">
          <t>A passive eavesdropper can identify DetNet flows and then gather information about en
            route DetNet flows, e.g., the number of DetNet flows, their bandwidths, their schedules,
            or other temporal properties. The gathered information can later be used to invoke other
            attacks on some or all of the flows.</t>
          <t>DetNet flows are typically uniquely identified by their 6-tuple, i.e. fields within the
            IP header, however in some implementations the flow ID may also be augmented by
            additional per-flow attributes known to the system, e.g. above the IP-layer. For the
            purpose of this document we assume any such additional fields used for flow ID are
            encrypted and/or integrity-protected from external attackers.</t>
        </section>
        <section anchor="SyncThreat" title="Time Synchronization Mechanisms">
          <t>An attacker can use any of the attacks described in <xref target="RFC7384"/> to attack
            the synchronization protocol, thus affecting the DetNet service. </t>
        </section>
      </section>
      <section title="Threat Summary">
        <t>A summary of the attacks that were discussed in this section is presented in <xref
            target="ThreatSummary"/>. For each attack, the table specifies the type of attackers
          that may invoke the attack. In the context of this summary, the distinction between
          internal and external attacks is under the assumption that a corresponding security
          mechanism is being used, and that the corresponding network equipment takes part in this
          mechanism. </t>
        <figure align="center" anchor="ThreatSummary" title="Threat Analysis Summary">
          <artwork align="left">
            <![CDATA[
+-------------------------------------------+----+-----+----+-----+
| Attack                                    |    Attacker Type    |
|                                           +----------+----------+
|                                           | Internal | External |
|                                           |On-P|Off-P|On-P|Off-P|
+-------------------------------------------+----+-----+----+-----+
|Delay attack                               | +  |  +  | +  |  +  |
+-------------------------------------------+----+-----+----+-----+
|DetNet Flow Modification or Spoofing       | +  |  +  |    |     |
+-------------------------------------------+----+-----+----+-----+
|Inter-segment Attack                       | +  |  +  | +  |  +  |
+-------------------------------------------+----+-----+----+-----+
|Replication: Increased Attack Surface      | +  |  +  | +  |  +  |
+-------------------------------------------+----+-----+----+-----+
|Replication-related Header Manipulation    | +  |     |    |     |
+-------------------------------------------+----+-----+----+-----+
|Path Manipulation                          | +  |  +  |    |     |
+-------------------------------------------+----+-----+----+-----+
|Path Choice: Increased Attack Surface      | +  |  +  | +  |  +  |
+-------------------------------------------+----+-----+----+-----+
|Control or Signaling Packet Modification   | +  |     |    |     |
+-------------------------------------------+----+-----+----+-----+
|Control or Signaling Packet Injection      | +  |  +  |    |     |
+-------------------------------------------+----+-----+----+-----+
|Reconnaissance                             | +  |     | +  |     |
+-------------------------------------------+----+-----+----+-----+
|Attacks on Time Synchronization Mechanisms | +  |  +  | +  |  +  |
+-------------------------------------------+----+-----+----+-----+
           ]]></artwork>
        </figure>
      </section>
    </section>
    <!-- Section: Security Threats -->
    <section anchor="ThreatImpact" title="Security Threat Impacts">
      <t>When designing security for a DetNet, as with any network, it may be prohibitively
        expensive or technically infeasible to thoroughly protect against every possible threat.
        Thus the security designer must be informed (for example by an application domain expert
        such as a product manager) regarding the relative significance of the various threats and
        their impact if a successful attack is carried out. In this section we present an example of
        a possible template for such a communication, culminating in a table (<xref
          target="ThreatIndustryMapping"/>) which lists a set of threats under consideration, and
        some values characterizing their relative impact in the context of a given industry. The
        specific threats, industries, and impact values in the table are provided only as an example
        of this kind of assessment and its communication; they are not intended to be taken
        literally.</t>
      <t>This section considers assessment of the relative impacts of the attacks described in <xref
          target="ThreatSection"/>, Security Threats. In this section, the impacts as described
        assume that the associated mitigation is not present or has failed. Mitigations are
        discussed in <xref target="ThreatMitigation"/>, Security Threat Mitigation. </t>
      <t> In computer security, the impact (or consequence) of an incident can be measured in loss
        of confidentiality, integrity or availability of information. In the case of time sensitive
        networks, the impact of a network exploit can also include failure or malfunction of
        mechanical and/or other OT systems. </t>
      <t>DetNet raises these stakes significantly for OT applications, particularly those which may
        have been designed to run in an OT-only environment and thus may not have been designed for
        security in an IT environment with its associated components, services and protocols. </t>
      <t>The extent of impact of a successful vulnerability exploit varies considerably by use case
        and by industry; additional insights regarding the individual use cases is available from
          <xref target="RFC8578"/>, DetNet Use Cases. Each of those use cases is represented in
          <xref target="ThreatIndustryMapping"/>, including Pro Audio, Electrical Utilities,
        Industrial M2M (split into two areas, M2M Data Gathering and M2M Control Loop), and others. </t>
      <t>Aspects of Impact (left column) include Criticality of Failure, Effects of Failure,
        Recovery, and DetNet Functional Dependence. Criticality of failure summarizes the
        seriousness of the impact. The impact of a resulting failure can affect many different
        metrics that vary greatly in scope and severity. In order to reduce the number of variables,
        only the following were included: Financial, Health and Safety, People well being (People
        WB), Affect on a single organization, and affect on multiple organizations. Recovery
        outlines how long it would take for an affected use case to get back to its pre-failure
        state (Recovery time objective, RTO), and how much of the original service would be lost in
        between the time of service failure and recovery to original state (Recovery Point
        Objective, RPO). DetNet dependence maps how much the following DetNet service objectives
        contribute to impact of failure: Time dependency, data integrity, source node integrity,
        availability, latency/jitter.</t>
      <t>The scale of the Impact mappings is low, medium, and high. In some use cases there may be a
        multitude of specific applications in which DetNet is used. For simplicity this section
        attempts to average the varied impacts of different applications. This section does not
        address the overall risk of a certain impact which would require the likelihood of a failure
        happening. </t>
      <t>In practice any such ratings will vary from case to case; the ratings shown here are given
        as examples.</t>
      <figure align="center" anchor="ThreatIndustryMapping"
        title="Impact of Attacks by Use Case Industry">
        <artwork align="left">
          <![CDATA[
Table
+------------------+-----------------------------------------+-----+
|                  | Pro A | Util | Bldg |Wire- | Cell |M2M  |M2M  |
|                  |       |      |      | less |      |Data |Ctrl |
+------------------+-----------------------------------------+-----+
| Criticality      | Med   | Hi   | Low  | Med  | Med  | Med | Med |
+------------------+-----------------------------------------+-----+
| Effects
+------------------+-----------------------------------------+-----+
|  Financial       | Med   | Hi   | Med  | Med  | Low  | Med | Med |
+------------------+-----------------------------------------+-----+
|  Health/Safety   | Med   | Hi   | Hi   | Med  | Med  | Med | Med |
+------------------+-----------------------------------------+-----+
|  People WB       | Med   | Hi   | Hi   | Low  | Hi   | Low | Low |
+------------------+-----------------------------------------+-----+
|  Effect 1 org    | Hi    | Hi   | Med  | Hi   | Med  | Med | Med |
+------------------+-----------------------------------------+-----+
|  Effect >1 org   | Med   | Hi   | Low  | Med  | Med  | Med | Med |
+------------------+-----------------------------------------+-----+
|Recovery
+------------------+-----------------------------------------+-----+
|  Recov Time Obj  | Med   | Hi   | Med  | Hi   | Hi   | Hi  | Hi  |
+------------------+-----------------------------------------+-----+
|  Recov Point Obj | Med   | Hi   | Low  | Med  | Low  | Hi  | Hi  |
+------------------+-----------------------------------------+-----+
|DetNet Dependence
+------------------+-----------------------------------------+-----+
|  Time Dependency | Hi    | Hi   | Low  | Hi   | Med  | Low | Hi  |
+------------------+-----------------------------------------+-----+
|  Latency/Jitter  | Hi    | Hi   | Med  | Med  | Low  | Low | Hi  |
+------------------+-----------------------------------------+-----+
|  Data Integrity  | Hi    | Hi   | Med  | Hi   | Low  | Hi  | Low |
+------------------+-----------------------------------------+-----+
|  Src Node Integ  | Hi    | Hi   | Med  | Hi   | Med  | Hi  | Hi  |
+------------------+-----------------------------------------+-----+
|  Availability    | Hi    | Hi   | Med  | Hi   | Low  | Hi  | Hi  |
+------------------+-----------------------------------------+-----+
]]></artwork>
      </figure>
      <t>The rest of this section will cover impact of the different groups in more detail.</t>
      <section anchor="DelayImpact" title="Delay-Attacks">
        <!-- <xref target="DelayThreat"/> -->
        <section title="Data Plane Delay Attacks">
          <t>Note that 'delay attack' also includes the possibility of a 'negative delay' or early
            arrival of a packet, or possibly adversely changing the timestamp value. </t>
          <t> Delayed messages in a DetNet link can result in the same behavior as dropped messages
            in ordinary networks as the services attached to the DetNet flow have strict
            deterministic requirements.</t>
          <t>For a single path scenario, disruption is a real possibility, whereas in a multipath
            scenario, large delays or instabilities in one DetNet flow can lead to increased buffer
            and processor resources at the eliminating router.</t>
          <t>A data-plane delay attack on a system controlling substantial moving devices, for
            example in industrial automation, can cause physical damage. For example, if the network
            promises a bounded latency of 2ms for a flow, yet the machine receives it with 5ms
            latency, control loop of the machine can become unstable. </t>
        </section>
        <section title="Controller Plane Delay Attacks">
          <t>In and of itself, this is not directly a threat to the DetNet service, but the effects
            of delaying control messages can have quite adverse effects later.</t>
          <t>
            <list style="symbols">
              <t>Delayed tear-down can lead to resource leakage, which in turn can result in failure
                to allocate new DetNet flows, finally giving rise to a denial of service attack.</t>
              <t>Failure to deliver, or severely delaying, controller plane messages adding an
                endpoint to a multicast-group will prevent the new endpoint from receiving expected
                frames thus disrupting expected behavior.</t>
              <t>Delaying messages removing an endpoint from a group can lead to loss of privacy as
                the endpoint will continue to receive messages even after it is supposedly
                removed.</t>
            </list>
          </t>
        </section>
      </section>
      <section anchor="SpoofingImpact" title="Flow Modification and Spoofing">
        <section title="Flow Modification">
          <t>If the contents of a packet header or body can be modified by the attacker, this can
            cause the packet to be routed incorrectly or dropped, or the payload to be corrupted or
            subtly modified.</t>
        </section>
        <section title="Spoofing">
          <section title="Dataplane Spoofing">
            <t>Spoofing dataplane messages can result in increased resource consumptions on the
              routers throughout the network as it will increase buffer usage and processor
              utilization. This can lead to resource exhaustion and/or increased delay.</t>
            <t>If the attacker manages to create valid headers, the false messages can be forwarded
              through the network, using part of the allocated bandwidth. This in turn can cause
              legitimate messages to be dropped when the resource budget has been exhausted.</t>
            <t>Finally, the endpoint will have to deal with invalid messages being delivered to the
              endpoint instead of (or in addition to) a valid message.</t>
          </section>
          <section title="Controller Plane Spoofing">
            <t>A successful controller plane spoofing-attack will potentionally have adverse
              effects. It can do virtually anything from:</t>
            <t>
              <list style="symbols">
                <t>modifying existing DetNet flows by changing the available bandwidth</t>
                <t>add or remove endpoints from a DetNet flow</t>
                <t>drop DetNet flows completely</t>
                <t>falsely create new DetNet flows (exhaust the systems resources, or to enable
                  DetNet flows that are outside the control of the Network Engineer)</t>
              </list>
            </t>
          </section>
          <!-- Controller Plane Spoofing -->

        </section>
        <!-- spoofing-->

      </section>
      <!-- Flow Modification and Spoofing impact -->
      <section anchor="SegmentationImpact" title="Segmentation Attacks (injection)">
        <section title="Data Plane Segmentation">
          <t>Injection of false messages in a DetNet flow could lead to exhaustion of the available
            bandwidth for that flow if the routers attribute these false messages to the resource
            budget of that flow. </t>
          <t>In a multipath scenario, injected messages will cause increased processor utilization
            in elimination routers. If enough paths are subject to malicious injection, the
            legitimate messages can be dropped. Likewise it can cause an increase in buffer usage.
            In total, it will consume more resources in the routers than normal, giving rise to a
            resource exhaustion attack on the routers.</t>
          <t>If a DetNet flow is interrupted, the end application will be affected by what is now a
            non-deterministic flow. Note that there are many possible sources of flow interruptions,
            for example, but not limited to, such physical layer conditions as a broken wire or a
            radio link which is compromised by interference. </t>
        </section>
        <section title="Controller Plane Segmentation">
          <t> In a successful controller plane segmentation attack, control messages are acted on by
            nodes in the network, unbeknownst to the central controller or the network engineer.
            This has the potential to: </t>
          <t>
            <list style="symbols">
              <t>create new DetNet flows (exhausting resources)</t>
              <t>drop existing DetNet flows (denial of service)</t>
              <t>add end-stations to a multicast group (loss of privacy)</t>
              <t>remove end-stations from a multicast group (reduction of service)</t>
              <t>modify the DetNet flow attributes (affecting available bandwidth)</t>
            </list>
          </t>
        </section>
        <!-- cp segment impact -->

      </section>
      <!-- SegmentationImpact -->
      <section anchor="ReplicationImpact" title="Replication and Elimination">
        <t> The Replication and Elimination is relevant only to data plane messages as controller
          plane messages are not subject to multipath routing. </t>
        <section title="Increased Attack Surface">
          <t>Covered briefly in <xref target="SegmentationImpact"/>, Segmentation Attacks. </t>
        </section>
        <section title="Header Manipulation at Elimination Routers">
          <t>Covered briefly in <xref target="SegmentationImpact"/>, Segmentation Attacks. </t>
        </section>
      </section>
      <section title="Control or Signaling Packet Modification">
        <t>If control packets are subject to manipulation undetected, the network can be severely
          compromised.</t>
      </section>
      <section title="Control or Signaling Packet Injection">
        <t>If an attacker can inject control packets undetected, the network can be severely
          compromised.</t>
      </section>
      <section title="Reconnaissance" anchor="Reconnaissance">
        <t> Of all the attacks, this is one of the most difficult to detect and counter. Often, an
          attacker will start out by observing the traffic going through the network and use the
          knowledge gathered in this phase to mount future attacks. </t>
        <t> The attacker can, at their leisure, observe over time all aspects of the messaging and
          signalling, learning the intent and purpose of all traffic flows. At some later date,
          possibly at an important time in an operational context, the attacker can launch a
          multi-faceted attack, possibly in conjunction with some demand for ransom. </t>
        <t> The flow-id in the header of the data plane messages gives an attacker a very reliable
          identifier for DetNet traffic, and this traffic has a high probability of going to
          lucrative targets. </t>
        <t>Applications which are ported from a private OT network to the higher visibility DetNet
          environment may need to be adapted to limit distinctive flow properties that could make
          them susceptible to reconnaissance. </t>
      </section>
      <section title="Attacks on Time Synchronization Mechanisms">
        <t>Attacks on time synchronization mechanisms are addressed in <xref target="RFC7384"/>.
        </t>
      </section>
      <section title="Attacks on Path Choice" anchor="PathChoiceImpact">
        <t>This is covered in part in <xref target="SegmentationImpact"/>, Segmentation Attacks, and
          as with Replication and Elimination ( <xref target="ReplicationImpact"/>), this is
          relevant for DataPlane messages. </t>
      </section>
    </section>
    <!-- Section: Security Threat Impacts-->
    <section anchor="ThreatMitigation" title="Security Threat Mitigation">
      <t>This section describes a set of measures that can be taken to mitigate the attacks
        described in <xref target="ThreatSection"/>, Security Threats. These mitigations should be
        viewed as a toolset that includes several different and diverse tools. Each application or
        system will typically use a subset of these tools, based on a system-specific threat
        analysis. </t>
      <t>Some of the technology-specific security considerations and mitigation approaches are
        further discussed in the DetNet data plane solution documents, such as <xref
          target="RFC8939"/>, <xref target="RFC8938"/>, <xref
          target="I-D.ietf-detnet-mpls-over-udp-ip"/>, and <xref
          target="I-D.ietf-detnet-ip-over-mpls"/>. </t>
      <section title="Path Redundancy">
        <t>Description <list hangIndent="10" style="empty">
            <t>A DetNet flow that can be forwarded simultaneously over multiple paths. Path
              replication and elimination <xref target="RFC8655"/> provides resiliency to dropped or
              delayed packets. This redundancy improves the robustness to failures and to on-path
              attacks. Note: At the time of this writing, PREOF is not defined for the IP data
              plane. </t>
          </list>
        </t>
        <t>Related attacks <list hangIndent="10" style="empty">
            <t>Path redundancy can be used to mitigate various on-path attacks, including attacks
              described in <xref target="DelayThreat"/>, <xref target="ModificationThreat"/>, <xref
                target="SegmentThreat"/>, and <xref target="SyncThreat"/>. However it is also
              possible that multiple paths may make it more difficult to locate the source of an
              on-path attacker. </t>
            <t>A delay modulation attack could result in extensively exercising parts of the code
              that wouldn't normally be extensively exercised and thus might expose flaws in the
              system that might otherwise not be exposed. </t>
          </list>
        </t>
      </section>
      <section anchor="IntegritySection" title="Integrity Protection">
        <t>Description <list hangIndent="10" style="empty">
            <t>Integrity Protection in the scope of DetNet is the ability to detect if a header has
              been modified (either maliciously or by chance) and propagate a warning to a
              responsible monitoring agent. An integrity protection mechanism is designed to
              counteract header modification attacks where a Message Authentication Code (MAC) is
              the most common. The MAC can be distributed either in-line (included in the same
              packet) or via a side channel. Due to the nature of DetNet traffic. Note: a sideband
              approach may yield too high overhead and complexity and should only be used as a very
              last resort if in-line approaches are not viable. </t>
            <t> There are different levels of security available for integrity protection, ranging
              from the basic ability to detect if a header has been corrupted in transit (no
              malicious attack) to stopping a skilled and determined attacker capable of both subtly
              modifying fields in the headers as well as updating an unsigned MAC. Common for all
              are the 2 steps that need to be performed in both ends. The first is computing the
              checksum or MAC. The corresponding verification step must perform the same steps
              before comparing the provided with the computed value. Only then can the receiver be
              reasonably sure that the header is authentic. </t>
            <t> The most basic protection mechanism consists of computing a simple checksum of the
              header fields and provide it to the next entity in the packets path for verification.
              Using a MAC combined with a secret key provides the best protection against
              modification and replication attacks (see <xref target="ModificationThreat"/> and
                <xref target="ReplicationThreat"/>). This MAC usage needs to be part of a security
              association that is established and managed by a security association protocol (such
              as IKEv2 for IPsec security associations). Integrity protection in the controller
              plane is discussed in <xref target="ControllerProtectSection"/>. The secret key,
              regardless of MAC used, must be protected from falling into the hands of unauthorized
              users. </t>
            <t> DetNet system- and/or component- level designers need to be aware of these
              distinctions and enforce appropriate integrity protection mechanisms as needed based
              on a threat analysis. Note that adding integrity protection mechanisms may introduce
              latency, thus many of the same considerations in <xref
                target="EncryptionConsiderations"/> also apply here. </t>
          </list>
        </t>
        <t>Packet Sequence Number Integrity Considerations <list hangIndent="10" style="empty">
            <t>The use of PREOF in a DetNet implementation implies the use of a sequence number for
              each packet. There is a trust relationship between the component that adds the
              sequence number and the component that removes the sequence number. The sequence
              number may be end-to-end source to destination, or may be added/deleted by network
              edge components. The adder and remover(s) have the trust relationship because they are
              the ones that ensure that the sequence numbers are not modifiable. Thus, sequence
              numbers can be protected by using encryption, or by a MAC without using encryption.
              Between the adder and remover there may or may not be replication and elimination
              functions. The elimination functions must be able to see the sequence numbers.
              Therefore, if encryption is done between adders and removers it must not obscure the
              sequence number. If the sequence removers and the eliminators are in the same physical
              component, it may be possible to obscure the sequence number, however that is a layer
              violation, and is not recommended practice. Note: At the time of this writing, PREOF
              is not defined for the IP data plane.</t>
          </list>
        </t>
        <t>Related attacks <list hangIndent="10" style="empty">
            <t>Integrity protection mitigates attacks related to modification and tampering,
              including the attacks described in <xref target="ModificationThreat"/> and <xref
                target="ReplicationThreat"/>. </t>
          </list>
        </t>
      </section>
      <section title="DetNet Node Authentication">
        <t>Description <list hangIndent="10" style="empty">
            <t>Authentication verifies the identity of DetNet nodes (including DetNet Controller
              Plane nodes), and this enables mitigation of spoofing attacks. While integrity
              protection ( <xref target="IntegritySection"/>) prevents intermediate nodes from
              modifying information, authentication (such as IPsec <xref target="RFC4301"/> or
              MACsec <xref target="IEEE802.1AE-2018"/>) can provide traffic origin verification,
              i.e. to verify that each packet in a DetNet flow is from a known source. </t>
          </list>
        </t>
        <t>Related attacks <list hangIndent="10" style="empty">
            <t>DetNet node authentication is used to mitigate attacks related to spoofing, including
              the attacks of <xref target="ModificationThreat"/>, and <xref
                target="ReplicationThreat"/>. </t>
          </list>
        </t>
      </section>
      <section title="Dummy Traffic Insertion">
        <t>Description <list hangIndent="10" style="empty">
            <t>With some queueing methods such as <xref target="IEEE802.1Qch-2017"/> it is possible
            to introduce dummy traffic in order to regularize the timing of packet
            transmission. This will subsequently reduce the value of passive monitoring from
	    internal threats (see <xref target="ThreatSection" />) as it will
	    be much more difficult to associate discrete events with particular network packets.
            </t>
          </list>
        </t>
        <t>Related attacks <list hangIndent="10" style="empty">
            <t>Removing distinctive temporal properties of individual packets or flows can be used
              to mitigate against reconnaissance attacks <xref target="ReconnaissanceThreat"/>. For
              example, dummy traffic can be used to synthetically maintain constant traffic rate
              even when no user data is transmitted, thus making it difficult to collect information
              about the times at which users are active, and the times at which DETNET flows are
            added or removed.</t>
          </list>
	</t>
        <t>Traffic Insertion Challenges
	<list hangIndent="10" style="empty">
	  <t>Once an attacker is able to monitor the frames traversing a network to such a degree
	  that it is possible to differentiate between regular, best-effort traffic and traffic
	  belonging to a specific DetNet-flow, it becomes hard to not reveal if a frame is valid
	  traffic or an inserted frame. It should therefore be a conscious design decision
	  how to implement this. In many cases, the DetNet application itself is best suited to
	  send valid traffic, insert dummy content and remove it in the other end..</t>
	  <t>If the traffic is to be inserted by bridges in the network, additional challenges must
	  be solved.
          <list style="symbols">
            <t>Inserted traffic must be indistinguishable from valid stream traffic.</t>
	    <t>Bridges near the end of the path must be able to safely remove all inserted
	    traffic, but only inserted traffic.</t>
	    <t>Control plane support for where to insert and remove dummy traffic must be in
	    place. This must not be revealed to an attacker.</t>
          </list>
	  Further discussions and reading about how sRTP handles this can be found in <xref
	  target="RFC6562" />
	  </t>
	</list>
	</t>
	</section>
      <section title="Encryption">
        <t>Description <list hangIndent="10" style="empty">
            <t>Reconnaissance attacks (<xref target="ReconnaissanceThreat"/>) can be mitigated by
              using encryption. Specific encryption protocols will depend on the lower layers that
              DetNet is forwarded over. For example, IP flows may be forwarded over IPsec <xref
                target="RFC4301"/>, and Ethernet flows may be secured using MACsec <xref
                target="IEEE802.1AE-2018"/>.</t>

            <t>DetNet nodes do not have any need to inspect the payload of any DetNet packets,
              making them data-agnostic. This means that end-to-end encryption at the application
              layer is an acceptable way to protect user data. </t>

            <t>Note that reconnaissance is a threat that is not specific to DetNet flows, and
              therefore reconnaissance mitigation will typically be analyzed and addressed by a
              network operator regardless of whether DetNet flows are deployed. Thus, encryption
              requirements will typically not be defined in DetNet technology-specific
              specifications, but considerations of using DetNet in encrypted environments will be
              discussed in these specifications. For example, Section 5.1.2.3. of <xref
                target="RFC8939"/> discusses flow identification of DetNet flows running over
              IPsec.</t>

          </list>
        </t>
        <t>Related attacks <list hangIndent="10" style="empty">
            <t>As noted above, encryption can be used to mitigate reconnaissance attacks ( <xref
                target="ReconnaissanceThreat"/>). However, for a DetNet to provide differentiated
              quality of service on a flow-by-flow basis, the network must be able to identify the
              flows individually. This implies that in a reconnaissance attack the attacker may also
              be able to track individual flows to learn more about the system. </t>
          </list>
        </t>
        <section anchor="EncryptionConsiderations" title="Encryption Considerations for DetNet">
          <t>Any compute time which is required for encryption and decryption processing ('crypto')
            must be included in the flow latency calculations. Thus, crypto algorithms used in a
            DetNet must have bounded worst-case execution times, and these values must be used in
            the latency calculations. </t>
          <t>Some crypto algorithms are symmetric in encode/decode time (such as AES) and others are
            asymmetric (such as public key algorithms). There are advantages and disadvantages to
            the use of either type in a given DetNet context. The discussion in this document
            relates to the timing implications of crypto for DetNet; it is assumed that integrity
            considerations are covered elsewhere in the literature.</t>
          <t>Asymmetrical crypto is typically not used in networks on a packet-by-packet basis due
            to its computational cost. For example, if only endpoint checks or checks at a small
            number of intermediate points are required, asymmetric crypto can be used to
            authenticate distribution or exchange of a secret symmetric crypto key; a successful
            check based on that key will provide traffic origin verification, as long as the key is
            kept secret by the participants. TLS (v1.3 <xref target="RFC8446"/>, in particular
            section 4.1 "Key exchange") and IKEv2 <xref target="RFC6071"/>) are examples of this for
            endpoint checks.</t>
          <t>However, if secret symmetric keys are used for this purpose the key must be given to
            all relays, which increases the probability of a secret key being leaked. Also, if any
            relay is compromised or faulty then it may inject traffic into the flow. Group key
            management protocols can be used to automate management of such symmetric keys; for an
            example in the context of IPsec, see <xref target="I-D.ietf-ipsecme-g-ikev2"/>. </t>
          <t>Alternatively, asymmetric crypto can provide traffic origin verification at every
            intermediate node. For example, a DetNet flow can be associated with an (asymmetric)
            keypair, such that the private key is available to the source of the flow and the public
            key is distributed with the flow information, allowing verification at every node for
            every packet. However, this is more computationally expensive. </t>
          <t>In either case, origin verification also requires replay detection as part of the
            security protocol to prevent an attacker from recording and resending traffic, e.g., as
            a denial of service attack on flow forwarding resources.</t>
          <t>If crypto keys are to be regenerated over the duration of the flow then the time
            required to accomplish this must be accounted for in the latency calculations. </t>
        </section>
      </section>
      <section anchor="ControllerProtectSection" title="Control and Signaling Message Protection">
        <t>Description <list hangIndent="10" style="empty">
            <t>Control and signaling messages can be protected through the use of any or all of
            encryption, authentication, and integrity protection mechanisms. Unlike data-flows, the
            deadlines for controller and signaling messages are less strict, as is the number of
            such packets in the network. This makes it possible to use asymmetric cryptography for
            signing of both payload and headers as well as encrypting the payload. A DetNet can be
	    managed by a central controller, which makes a shared public key  approach a well proven
	    approach. This is further discussed in <xref target="EncryptionConsiderations" />.
	    </t>
          </list>
        </t>
        <t>Related attacks <list hangIndent="10" style="empty">
            <t>These mechanisms can be used to mitigate various attacks on the controller plane, as
            described in <xref target="ControllerThreat"/>, <xref target="SyncThreat"/> and <xref
            target="PathThreat"/>. </t>
          </list>
        </t>
      </section>
      <section anchor="DpaMitigation" title="Dynamic Performance Analytics">
        <t>Description <list hangIndent="10" style="empty">
            <t>Incorporating Dynamic Performance Analytics ("DPA") implies that the DetNet design
              includes a performance monitoring system to validate that timing guarantees are being
              met and to detect timing violations or other anomalies that may be the symptom of a
              security attack or system malfunction. If this monitoring system detects unexpected
              behavior, it must then cause action to be initiated to address the situation in an
              appropriate and timely manner, either at the data plane or controller plane, or both
              in concert. </t>
            <t>The overall DPA system can thus be decomposed into the "detection" and "notification"
              functions. Although the time-specific DPA performance indicators and their
              implementation will likely be specific to a given DetNet, and as such are nascent
              technology at the time of this writing, DPA is commonly used in existing networks so
              we can make some observations on how such a system might be implemented for a DetNet,
              given that it would need to be adapted to address the time-specific performance
              indicators. </t>
          </list>
        </t>
        <t>Detection Mechanisms <list hangIndent="10" style="empty">
            <t>Measurement of timing performance can be done via "passive" or "active" monitoring,
              as discussed below. </t>
            <t>Examples of passive monitoring strategies include</t>
            <t>
              <list style="symbols">
                <t>Monitoring of queue and buffer levels, e.g. via Active Queue Management (e.g.
                    <xref target="RFC7567"/></t>
                <t>Monitoring of per-flow counters</t>
                <t>Measurement of link statistics such as traffic volume, bandwidth, and QoS</t>
                <t>Detection of dropped packets</t>
                <t>Use of commercially available Network Monitoring tools</t>
              </list>
            </t>
            <t>Examples of active monitoring include</t>
            <t>
              <list style="symbols">
                <t>In-band timing measurements (such as packet arrival times) e.g. by timestamping
                  and packet inspection</t>
                <t>Use of OAM. For DetNet-specific OAM considerations see <xref
                    target="I-D.ietf-detnet-ip-oam"/>, <xref target="I-D.ietf-detnet-mpls-oam"/>.
                  Note: At the time of this writing, specifics of DPA have not been developed for
                  the DetNet OAM, but could be a subject for future investigation</t>
                <t>For OAM for Ethernet specifically, see also Connectivity Fault Management (CFM,
                    <xref target="IEEE802.1Q"/>) which defines protocols and practices for OAM for
                  paths through 802.1 bridges and LANs</t>
                <t>Out-of-band detection. following the data path or parts of a data path, for
                  example Bidirectional Forwarding Detection (BFD, e.g. <xref target="RFC5880"
                  />)</t>
              </list>
            </t>
            <t>Note that for some measurements (e.g. packet delay) it may be necessary to make and
              reconcile measurements from more than one physical location (e.g. a source and
              destination), possibly in both directions, in order to arrive at a given performance
              indicator value. </t>
          </list>
        </t>
        <t>Notification Mechanisms <list hangIndent="10" style="empty">
            <t>Making DPA measurement results available at the right place(s) and time(s) to effect
              timely response can be challenging. Two notification mechanisms that are in general
              use are Netconf/YANG Notifications (e.g. <xref target="RFC5880"/>) and the proprietary
              local telemetry interfaces provided with components from some vendors.</t>
            <t>At the time of this writing YANG Notifications are not addressed by the DetNet YANG
              drafts, however this may be a topic for future work. It is possible that some of the
              passive mechanisms could be covered by notifications from non-DetNet-specific YANG
              modules; for example if there is OAM or other performance monitoring that can monitor
              delay bounds then that could have its own associated YANG model which could be
              relevant to DetNet, for example some "threshold" values for timing measurement
              notifications. </t>
            <t>At the time of this writing there is an IETF Working Group for network/performance
              monitoring (IP Performance Measurement, ippm). See also previous work by the completed
              Remote Network Monitoring Working Group (rmonmib). See also <xref target="RFC6632"/>,
              An Overview of the IETF Network Management Standards. </t>
            <t>Vendor-specific local telemetry may be available on some commercially available
              systems, whereby the system can be programmed (via a proprietary dedicated port and
              API) to monitor and report on specific conditions, based on both passive and active
              measurements.</t>
          </list>
        </t>

        <t>Related attacks <list hangIndent="10" style="empty">
            <t>Performance analytics can be used to mitigate various attacks, including the ones
              described in <xref target="DelayThreat"/> (Delay Attack), <xref target="SegmentThreat"
              /> (Resource Segmentation Attack), and <xref target="SyncThreat"/> (Time
              Synchronization Attack). </t>
            <t>For example, in the case of data plane delay attacks, one possible mitigation is to
              timestamp the data at the source, and timestamp it again at the destination, and if
              the resulting latency exceeds the promised bound, take appropriate action. Note that
              DetNet specifies packet sequence numbering, however it does not specify use of packet
              timestamps, although they may be used by the underlying transport (for example TSN,
                <xref target="IEEE802.1BA"/>) to provide the service.</t>
          </list>
        </t>
      </section>
      <section title="Mitigation Summary">
        <t>The following table maps the attacks of <xref target="ThreatSection"/>, Security Threats,
          to the impacts of <xref target="ThreatImpact"/>, Security Threat Impacts, and to the
          mitigations of the current section. Each row specifies an attack, the impact of this
          attack if it is successfully implemented, and possible mitigation methods. </t>
        <figure align="center" anchor="ThreatMapping"
          title="Mapping Attacks to Impact and Mitigations">
          <artwork align="left">
            <![CDATA[
+----------------------+---------------------+---------------------+
| Attack               |      Impact         |     Mitigations     |
+----------------------+---------------------+---------------------+
|Delay Attack          |-Non-deterministic   |-Path redundancy     |
|                      | delay               |-Performance         |
|                      |-Data disruption     | analytics           |
|                      |-Increased resource  |                     |
|                      | consumption         |                     |
+----------------------+---------------------+---------------------+
|Reconnaissance        |-Enabler for other   |-Encryption          |
|                      | attacks             |-Dummy traffic       |
|                      |                     |           insertion |
+----------------------+---------------------+---------------------+
|DetNet Flow Modificat-|-Increased resource  |-Path redundancy     |
|ion or Spoofing       | consumption         |-Integrity protection|
|                      |-Data disruption     |-DetNet Node         |
|                      |                     | authentication      |
+----------------------+---------------------+---------------------+
|Inter-Segment Attack  |-Increased resource  |-Path redundancy     |
|                      | consumption         |-Performance         |
|                      |-Data disruption     | analytics           |
+----------------------+---------------------+---------------------+
|Replication: Increased|-All impacts of other|-Integrity protection|
|attack surface        | attacks             |-DetNet Node         |
|                      |                     | authentication      |
+----------------------+---------------------+---------------------+
|Replication-related   |-Non-deterministic   |-Integrity protection|
|Header Manipulation   | delay               |-DetNet Node         |
|                      |-Data disruption     | authentication      |
+----------------------+---------------------+---------------------+
|Path Manipulation     |-Enabler for other   |-Control message     |
|                      | attacks             | protection          |
+----------------------+---------------------+---------------------+
|Path Choice: Increased|-All impacts of other|-Control message     |
|Attack Surface        | attacks             | protection          |
+----------------------+---------------------+---------------------+
|Control or Signaling  |-Increased resource  |-Control message     |
|Packet Modification   | consumption         | protection          |
|                      |-Non-deterministic   |                     |
|                      | delay               |                     |
|                      |-Data disruption     |                     |
+----------------------+---------------------+---------------------+
|Control or Signaling  |-Increased resource  |-Control message     |
|Packet Injection      | consumption         | protection          |
|                      |-Non-deterministic   |                     |
|                      | delay               |                     |
|                      |-Data disruption     |                     |
+----------------------+---------------------+---------------------+
|Attacks on Time       |-Non-deterministic   |-Path redundancy     |
|Synchronization       | delay               |-Control message     |
|Mechanisms            |-Increased resource  | protection          |
|                      | consumption         |-Performance         |
|                      |-Data disruption     | analytics           |
+----------------------+---------------------+---------------------+
           ]]></artwork>
        </figure>
      </section>
    </section>
    <section title="Association of Attacks to Use Cases">
      <t>Different attacks can have different impact and/or mitigation depending on the use case, so
        we would like to make this association in our analysis. However since there is a potentially
        unbounded list of use cases, we categorize the attacks with respect to the common themes of
        the use cases as identified in the Use Case Common Themes section of the DetNet Use Cases
          <xref target="RFC8578"/>. </t>
      <t>See also <xref target="ThreatIndustryMapping"/> for a mapping of the impact of attacks per
        use case by industry. </t>
      <section title="Association of Attacks to Use Case Common Themes">
        <t>In this section we review each theme and discuss the attacks that are applicable to that
          theme, as well as anything specific about the impact and mitigations for that attack with
          respect to that theme. The table <xref target="ThemeAttackMapping"/>, Mapping Between
          Themes and Attacks, then provides a summary of the attacks that are applicable to each
          theme. </t>
        <section title="Sub-Network Layer">
          <t>DetNet is expected to run over various transmission mediums, with Ethernet being the
            first identified. Attacks such as Delay or Reconnaissance might be implemented
            differently on a different transmission medium, however the impact on the DetNet as a
            whole would be essentially the same. We thus conclude that all attacks and impacts that
            would be applicable to DetNet over Ethernet (i.e. all those named in this document)
            would also be applicable to DetNet over other transmission mediums. </t>
          <t>With respect to mitigations, some methods are specific to the Ethernet medium, for
            example time-aware scheduling using 802.1Qbv <xref target="IEEE802.1Qbv-2015"/> can
            protect against excessive use of bandwidth at the ingress - for other mediums, other
            mitigations would have to be implemented to provide analogous protection. </t>
        </section>
        <section title="Central Administration">
          <t>A DetNet network can be controlled by a centralized network configuration and control
            system. Such a system may be in a single central location, or it may be distributed
            across multiple control entities that function together as a unified control system for
            the network. </t>
          <t>All attacks named in this document which are relevant to controller plane packets (and
            the controller itself) are relevant to this theme, including Path Manipulation, Path
            Choice, Control Packet Modification or Injection, Reconaissance and Attacks on Time
            Synchronization Mechanisms. </t>
        </section>
        <section title="Hot Swap">
          <t>A DetNet network is not expected to be "plug and play" - it is expected that there is
            some centralized network configuration and control system. However, the ability to "hot
            swap" components (e.g. due to malfunction) is similar enough to "plug and play" that
            this kind of behavior may be expected in DetNet networks, depending on the
            implementation. </t>
          <t>An attack surface related to Hot Swap is that the DetNet network must at least consider
            input at runtime from components that were not part of the initial configuration of the
            network. Even a "perfect" (or "hitless") replacement of a component at runtime would not
            necessarily be ideal, since presumably one would want to distinguish it from the
            original for OAM purposes (e.g. to report hot swap of a failed component). </t>
          <t>This implies that an attack such as Flow Modification, Spoofing or Inter-segment (which
            could introduce packets from a "new" component, i.e. one heretofore unknown on the
            network) could be used to exploit the need to consider such packets (as opposed to
            rejecting them out of hand as one would do if one did not have to consider introduction
            of a new component).</t>
          <t>To mitigate this situation, deployments should provide a method for dynamic and secure
            registration of new components, and (possibly manual) deregistration of retired
            components. This would avoid the situation in which the network must accommodate
            potentially insecure packet flows from unknown components. </t>
          <t>Similarly if the network was designed to support runtime replacement of a clock
            component, then presence (or apparent presence) and thus consideration of packets from a
            new such component could affect the network, or the time synchronization of the network,
            for example by initiating a new Best Master Clock selection process. These types of
            attacks should therefore be considered when designing hot swap type functionality (see
              <xref target="RFC7384"/>). </t>
        </section>
        <section title="Data Flow Information Models">
          <t> DetNet specifies new YANG models which may present new attack surfaces. Per IETF
            guidelines, security considerations for any YANG model are expected to be part of the
            YANG model specification, as described in <xref target="IETF_YANG_SEC"/>.</t>
        </section>
        <section title="L2 and L3 Integration">
          <t>A DetNet network integrates Layer 2 (bridged) networks (e.g. AVB/TSN LAN) and Layer 3
            (routed) networks (e.g. IP) via the use of well-known protocols such as IP, MPLS
            Pseudowire, and Ethernet. Various DetNet drafts address many specific aspects of Layer 2
            and Layer 3 integration within a DetNet, and these are not individually referenced here;
            security considerations for those aspects are covered within those drafts or within the
            related subsections of the present document. </t>
          <t>Please note that although there are no entries in the L2 and L3 Integration line of the
            Mapping Between Themes and Attacks table <xref target="ThreatList"/>, this does not
            imply that there could be no relevant attacks related to L2-L3 integration.</t>
        </section>
        <section title="End-to-End Delivery">
          <t>Packets that are part of a resource-reserved DetNet flow are not to be dropped by the
            DetNet due to congestion. Packets may however be dropped for intended reasons, for
            example security measures. For example, consider the case in which a packet becomes
            corrupted (whether incidentally or maliciously) such that the resulting flow ID
            incidentally matches the flow ID of another DetNet flow, potentially resulting in
            additional unauthorized traffic on the latter. In such a case it may be a security
            requirement that the system report and/or take some defined action, perhaps when a
            packet drop count threshold has been reached (see also <xref target="DpaMitigation"/>). </t>
          <t>A data plane attack may force packets to be dropped, for example a "long" Delay or
            Replication/Elimination or Flow Modification attack. </t>
          <t>The same result might be obtained by a controller plane attack, e.g. Path Manipulation
            or Signaling Packet Modification.</t>
          <t>It may be that such attacks are limited to Internal on-path attackers, but other
            possibilities should be considered.</t>
          <t>An attack may also cause packets that should not be delivered to be delivered, such as
            by forcing packets from one (e.g. replicated) path to be preferred over another path
            when they should not be (Replication attack), or by Flow Modification, or by Path Choice
            or Packet Injection. A Time Synchronization attack could cause a system that was
            expecting certain packets at certain times to accept unintended packets based on
            compromised system time or time windowing in the scheduler. </t>
        </section>
        <section title="Replacement for Proprietary Fieldbuses and Ethernet-based Networks">
          <t>There are many proprietary "field buses" used in Industrial and other industries, as
            well as proprietary non-interoperable deterministic Ethernet-based networks. DetNet is
            intended to provide an open-standards-based alternative to such buses/networks. In cases
            where a DetNet intersects with such fieldbuses/networks or their protocols, such as by
            protocol emulation or access via a gateway, new attack surfaces can be opened.</t>
          <t>For example an Inter-Segment or Controller plane attack such as Path Manipulation, Path
            Choice or Control Packet Modification/Injection could be used to exploit commands
            specific to such a protocol, or that are interpreted differently by the different
            protocols or gateway. </t>
        </section>
        <section title="Deterministic vs Best-Effort Traffic">
          <t>Most of the themes described in this document address OT (reserved) DetNet flows - this
            item is intended to address issues related to IT traffic on a DetNet.</t>
          <t>DetNet is intended to support coexistence of time-sensitive operational (OT,
            deterministic) traffic and information (IT, "best effort") traffic on the same
            ("unified") network. </t>
          <t>With DetNet, this coexistence will become more common, and mitigations will need to be
            established. The fact that the IT traffic on a DetNet is limited to a corporate
            controlled network makes this a less difficult problem compared to being exposed to the
            open Internet, however this aspect of DetNet security should not be underestimated. </t>
          <t>An Inter-segment attack can flood the network with IT-type traffic with the intent of
            disrupting handling of IT traffic, and/or the goal of interfering with OT traffic.
            Presumably if the DetNet flow reservation and isolation of the DetNet is well-designed
            (better-designed than the attack) then interference with OT traffic should not result
            from an attack that floods the network with IT traffic. </t>
          <t>However the handling of IT traffic by the DetNet may not (by design) be as resilient to
            DOS attack, and thus designers must be otherwise prepared to mitigate DOS attacks on IT
            traffic in a DetNet.</t>
          <t>The network design as a whole also needs to consider possible application-level
            dependencies of "OT"-type applications on services provided by the "IT part" of the
            network; for example, does the OT application depend on IT network services such as DNS
            or OAM? If such dependencies exist, how are malicious packet flows handled? Such
            considerations are typically outside the scope of DetNet proper, but nonetheless need to
            be addressed in the overall DetNet network design for a given use case.</t>
        </section>
        <section title="Deterministic Flows">
          <t>Reserved bandwidth data flows (deterministic flows) must provide the allocated
            bandwidth, and must be isolated from each other. </t>
          <t>A Spoofing or Inter-segment attack which adds packet traffic to a bandwidth-reserved
            DetNet flow could cause that flow to occupy more bandwidth than it was allocated,
            resulting in interference with other DetNet flows.</t>
          <t>A Flow Modification or Spoofing or Header Manipulation or Control Packet Modification
            attack could cause packets from one flow to be directed to another flow, thus breaching
            isolation between the flows.</t>
        </section>
        <section title="Unused Reserved Bandwidth">
          <t>If bandwidth reservations are made for a DetNet flow but the associated bandwidth is
            not used at any point in time, that bandwidth is made available on the network for
            best-effort traffic. However, note that security considerations for best-effort traffic
            on a DetNet network is out of scope of the present document, provided that such an
            attack does not affect performance for DetNet OT traffic. </t>
        </section>
        <section title="Interoperability">
          <t>The DetNet specifications as a whole are intended to enable an ecosystem in which
            multiple vendors can create interoperable products, thus promoting component diversity
            and potentially higher numbers of each component manufactured. Toward that end, the
            security measures and protocols discussed in this document are intended to encourage
            interoperability.</t>
          <t>Given that the DetNet specifications are unambiguously written and that the
            implementations are accurate, the property of interoperability should not in and of
            itself cause security concerns; however, flaws in interoperability between components
            could result in security weaknesses. The network operator as well as system and
            component designer can all contribute to reducing such weaknesses through
            interoperability testing. </t>
        </section>
        <section title="Cost Reductions">
          <t>The DetNet network specifications are intended to enable an ecosystem in which multiple
            vendors can create interoperable products, thus promoting higher numbers of each
            component manufactured, promoting cost reduction and cost competition among vendors. </t>
          <t>This envisioned breadth of DetNet-enabled products is in general a positive factor,
            however implementation flaws in any individual component can present an attack surface.
            In addition, implementation differences between components from different vendors can
            result in attack surfaces (resulting from their interaction) which may not exist in any
            individual component. </t>
          <t>Network operators can mitigate such concerns through sufficient product and
            interoperability testing.</t>
        </section>
        <section title="Insufficiently Secure Components">
          <t>The DetNet network specifications are intended to enable an ecosystem in which multiple
            vendors can create interoperable products, thus promoting component diversity and
            potentially higher numbers of each component manufactured. However this raises the
            possibility that a vendor might repurpose for DetNet applications a hardware or software
            component that was originally designed for operation in an isolated OT network, and thus
            may not have been designed to be sufficiently secure, or secure at all. Deployment of
            such a component on a DetNet network that is intended to be highly secure may present an
            attack surface. </t>
          <t>The DetNet network operator may need to take specific actions to protect such
            components, such as implementing a dedicated security layer around the component. </t>
        </section>
        <section title="DetNet Network Size" anchor="NetworkSize">
          <t>DetNet networks range in size from very small, e.g. inside a single industrial machine,
            to very large, for example a Utility Grid network spanning a whole country. </t>
          <t>The size of the network might be related to how the attack is introduced into the
            network, for example if the entire network is local, there is a threat that power can be
            cut to the entire network. If the network is large, perhaps only a part of the network
            is attacked. </t>
          <t>A Delay attack might be as relevant to a small network as to a large network, although
            the amount of delay might be different. </t>
          <t>Attacks sourced from IT traffic might be more likely in large networks, since more
            people might have access to the network, presenting a larger attack surface. Similarly
            Path Manipulation, Path Choice and Time Synchronization attacks seem more likely
            relevant to large networks.</t>
        </section>
        <section title="Multiple Hops">
          <t>Large DetNet networks (e.g. a Utility Grid network) may involve many "hops" over
            various kinds of links for example radio repeaters, microwave links, fiber optic links,
            etc. </t>
          <t>An attack that takes advantage of flaws (or even normal operation) in the device
            drivers for the various links (through internal knowledge of how the individual driver
            or firmware operates) could take proportionately greater advantage of this topology. </t>
          <t>It is also possible that this DetNet topology will not be in as common use as other
            more homogeneous topologies so there may be more opportunity for attackers to exploit
            software and/or protocol flaws in the implementations which have not been tested through
            extensive use, particularly in the case of early adopters.</t>
          <t>Of the attacks we have defined, the ones identified in <xref target="NetworkSize"/> as
            germane to large networks are the most relevant. </t>
        </section>
        <section title="Level of Service" anchor="LevelOfServiceTheme">
          <t>A DetNet is expected to provide means to configure the network that include querying
            network path latency, requesting bounded latency for a given DetNet flow, requesting
            worst case maximum and/or minimum latency for a given path or DetNet flow, and so on. It
            is an expected case that the network cannot provide a given requested service level. In
            such cases the network control system should reply that the requested service level is
            not available (as opposed to accepting the parameter but then not delivering the desired
            behavior). </t>
          <t>Controller plane attacks such as Signaling Packet Modification and Injection could be
            used to modify or create control traffic that could interfere with the process of a user
            requesting a level of service and/or the reply from the network.</t>
          <t>Reconnaissance could be used to characterize flows and perhaps target specific flows
            for attack via the controller plane as noted in <xref target="Reconnaissance"/>. </t>
        </section>
        <section title="Bounded Latency" anchor="BoundedLatencyTheme">
          <t>DetNet provides the expectation of guaranteed bounded latency. </t>
          <t>Delay attacks can cause packets to miss their agreed-upon latency boundaries.</t>
          <t>Time Synchronization attacks can corrupt the time reference of the system, resulting in
            missed latency deadlines (with respect to the "correct" time reference).</t>
        </section>
        <section title="Low Latency">
          <t>Applications may require "extremely low latency" however depending on the application
            these may mean very different latency values; for example "low latency" across a Utility
            grid network is on a different time scale than "low latency" in a motor control loop in
            a small machine. The intent is that the mechanisms for specifying desired latency
            include wide ranges, and that architecturally there is nothing to prevent arbitrarily
            low latencies from being implemented in a given network. </t>
          <t>Attacks on the controller plane (as described in the Level of Service theme <xref
              target="LevelOfServiceTheme"/>) and Delay and Time attacks (as described in the
            Bounded Latency theme <xref target="BoundedLatencyTheme"/>) both apply here. </t>
        </section>
        <section title="Bounded Jitter (Latency Variation)">
          <t>DetNet is expected to provide bounded jitter (packet to packet latency variation).</t>
          <t>Delay attacks can cause packets to vary in their arrival times, resulting in packet to
            packet latency variation, thereby violating the jitter specification.</t>
        </section>
        <section title="Symmetrical Path Delays">
          <t>Some applications would like to specify that the transit delay time values be equal for
            both the transmit and return paths. </t>
          <t>Delay attacks can cause path delays to materially differ between paths.</t>
          <t>Time Synchronization attacks can corrupt the time reference of the system, resulting in
            path delays that may be perceived to be different (with respect to the "correct" time
            reference) even if they are not materially different.</t>
        </section>
        <section title="Reliability and Availability">
          <t>DetNet based systems are expected to be implemented with essentially arbitrarily high
            availability (for example 99.9999% up time, or even 12 nines). The intent is that the
            DetNet designs should not make any assumptions about the level of reliability and
            availability that may be required of a given system, and should define parameters for
            communicating these kinds of metrics within the network. </t>
          <t>Any attack on the system, of any type, can affect its overall reliability and
            availability, thus in the mapping table <xref target="ThreatList"/> we have marked every
            attack. Since every DetNet depends to a greater or lesser degree on reliability and
            availability, this essentially means that all networks have to mitigate all attacks,
            which to a greater or lesser degree defeats the purpose of associating attacks with use
            cases. It also underscores the difficulty of designing "extremely high reliability"
            networks. </t>
          <t>In practice, network designers can adopt a risk-based approach, in which only those
            attacks are mitigated whose potential cost is higher than the cost of mitigation.</t>
        </section>
        <section title="Redundant Paths">
          <t>This document expects that each DetNet system will be implemented to some essentially
            arbitrary level of reliability and/or availability, depending on the use case. A
            strategy used by DetNet for providing extraordinarily high levels of reliability when
            justified is to provide redundant paths between which traffic can be seamlessly
            switched, all the while maintaining the required performance of that system. </t>
          <t>Replication-related attacks are by definition applicable here. Controller plane attacks
            can also interfere with the configuration of redundant paths.</t>
        </section>
        <section title="Security Measures">
          <t>A DetNet network must be made sufficiently secure against problematic component or
            traffic behavior, whether malicious or incidental, and whether affecting a single
            component or multiple components. If any of the security mechanisms which protect the
            DetNet from such problems are attacked or subverted, this can result in malfunction of
            the network. Thus the design of the security system itself needs to be robust against
            attacks.</t>
          <t>The general topic of protection of security mechanisms is not unique to DetNet; it is
            identical to the case of securing any security mechanism for any network. This document
            addresses these concerns only to the extent that they are unique to DetNet.</t>
        </section>
      </section>
      <section title="Summary of Attack Types per Use Case Common Theme">
        <t>The List of Attacks table <xref target="ThreatList"/> lists the attacks of <xref
            target="ThreatSection"/>, Security Threats, assigning a number to each type of attack.
          That number is then used as a short form identifier for the attack in <xref
            target="ThemeAttackMapping"/>, Mapping Between Themes and Attacks. </t>
        <figure align="center" anchor="ThreatList" title="List of Attacks">
          <artwork align="left">
            <![CDATA[
+----+-------------------------------------------+
|    | Attack                                    |
+----+-------------------------------------------+
|  1 |Delay Attack                               |
+----+-------------------------------------------+
|  2 |DetNet Flow Modification or Spoofing       |
+----+-------------------------------------------+
|  3 |Inter-Segment Attack                       |
+----+-------------------------------------------+
|  4 |Replication: Increased attack surface      |
+----+-------------------------------------------+
|  5 |Replication-related Header Manipulation    |
+----+-------------------------------------------+
|  6 |Path Manipulation                          |
+----+-------------------------------------------+
|  7 |Path Choice: Increased Attack Surface      |
+----+-------------------------------------------+
|  8 |Control or Signaling Packet Modification   |
+----+-------------------------------------------+
|  9 |Control or Signaling Packet Injection      |
+----+-------------------------------------------+
| 10 |Reconnaissance                             |
+----+-------------------------------------------+
| 11 |Attacks on Time Synchronization Mechanisms |
+----+-------------------------------------------+
           ]]></artwork>
        </figure>
        <t>The Mapping Between Themes and Attacks table <xref target="ThemeAttackMapping"/> maps the
          use case themes of <xref target="RFC8578"/> (as also enumerated in this document) to the
          attacks of <xref target="ThreatList"/>. Each row specifies a theme, and the attacks
          relevant to this theme are marked with a '+'. The row items which have no threats
          associated with them are included in the table for completeness of the list of Use Case
          Common Themes, and do not have DetNet-specific threats associated with them. </t>
        <figure align="center" anchor="ThemeAttackMapping"
          title="Mapping Between Themes and Attacks">
          <artwork align="left">
            <![CDATA[
+----------------------------+--------------------------------+
| Theme                      |             Attack             |
|                            +--+--+--+--+--+--+--+--+--+--+--+
|                            | 1| 2| 3| 4| 5| 6| 7| 8| 9|10|11|
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|Network Layer - AVB/TSN Eth.| +| +| +| +| +| +| +| +| +| +| +|
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|Central Administration      |  |  |  |  |  | +| +| +| +| +| +|
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|Hot Swap                    |  | +| +|  |  |  |  |  |  |  | +|
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|Data Flow Information Models|  |  |  |  |  |  |  |  |  |  |  |
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|L2 and L3 Integration       |  |  |  |  |  |  |  |  |  |  |  |
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|End-to-end Delivery         | +| +| +| +| +| +| +| +| +|  | +|
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|Proprietary Deterministic   |  |  | +|  |  | +| +| +| +|  |  |
|Ethernet Networks           |  |  |  |  |  |  |  |  |  |  |  |
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|Replacement for Proprietary |  |  | +|  |  | +| +| +| +|  |  |
|Fieldbuses                  |  |  |  |  |  |  |  |  |  |  |  |
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|Deterministic vs. Best-     |  |  | +|  |  |  |  |  |  |  |  |
|Effort Traffic              |  |  |  |  |  |  |  |  |  |  |  |
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|Deterministic Flows         |  | +| +|  | +| +|  | +|  |  |  |
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|Unused Reserved Bandwidth   |  | +| +|  |  |  |  | +| +|  |  |
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|Interoperability            |  |  |  |  |  |  |  |  |  |  |  |
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|Cost Reductions             |  |  |  |  |  |  |  |  |  |  |  |
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|Insufficiently Secure       |  |  |  |  |  |  |  |  |  |  |  |
|Components                  |  |  |  |  |  |  |  |  |  |  |  |
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|DetNet Network Size         | +|  |  |  |  | +| +|  |  |  | +|
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|Multiple Hops               | +| +|  |  |  | +| +|  |  |  | +|
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|Level of Service            |  |  |  |  |  |  |  | +| +| +|  |
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|Bounded Latency             | +|  |  |  |  |  |  |  |  |  | +|
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|Low Latency                 | +|  |  |  |  |  |  | +| +| +| +|
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|Bounded Jitter              | +|  |  |  |  |  |  |  |  |  |  |
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|Symmetric Path Delays       | +|  |  |  |  |  |  |  |  |  | +|
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|Reliability and Availability| +| +| +| +| +| +| +| +| +| +| +|
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|Redundant Paths             |  |  |  | +| +|  |  | +| +|  |  |
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
|Security Measures           |  |  |  |  |  |  |  |  |  |  |  |
+----------------------------+--+--+--+--+--+--+--+--+--+--+--+
           ]]></artwork>
        </figure>
      </section>
      <section title="Security Considerations for OAM Traffic">
        <t>This section considers DetNet-specific security considerations for packet traffic that is
          generated and transmitted over a DetNet as part of OAM (Operations, Administration, and
          Maintenance). For the purposes of this discussion, OAM traffic falls into one of two basic
          types:</t>
        <t>
          <list style="symbols">
            <t>OAM traffic generated by the network itself. The additional bandwidth required for
              such packets is added by the network administration, presumably transparent to the
              customer. Security considerations for such traffic are not DetNet-specific (apart from
              such traffic being subject to the same DetNet-specific security considerations as any
              other DetNet data flow) and are thus not covered in this document.</t>
            <t>OAM traffic generated by the customer. From a DetNet security point of view, DetNet
              security considerations for such traffic are exactly the same as for any other
              customer data flows.</t>
          </list>
        </t>
        <t>From the perspective of an attack, OAM traffic is indistinguishable from DetNet traffic
          and the network needs to be secure against injection, removal, or modification of traffic
          of any kind, including OAM traffic. A DetNet is sensitive to any form of packet injection,
          removal or manipulation and in this respect DetNet OAM traffic is no different. Techniques
          for securing a DetNet against these threats have been discussed elsewhere in this
          document.</t>
      </section>
    </section>
    <section anchor="TechnologySpecificThreats" title="DetNet Technology-Specific Threats">
      <t>
        <xref target="ThreatSection"/>, Security Threats, described threats which are independent of
        a DetNet implementation. This section considers threats specifically related to the IP- and
        MPLS-specific aspects of DetNet implementations. </t>
      <t>The primary security considerations for the data plane specifically are to maintain the
        integrity of the data and the delivery of the associated DetNet service traversing the
        DetNet network. </t>
      <t>The primary relevant differences between IP and MPLS implementations are in flow
        identification and OAM methodologies.</t>
      <t>As noted in <xref target="RFC8655"/>, DetNet operates at the IP layer ( <xref
          target="RFC8939"/>) and delivers service over sub-layer technologies such as MPLS (<xref
          target="RFC8938"/>) and IEEE 802.1 Time-Sensitive Networking (TSN) (<xref
          target="I-D.ietf-detnet-ip-over-tsn"/>). Application flows can be protected through
        whatever means are provided by the layer and sub-layer technologies. For example,
        technology-specific encryption may be used, for example for IP flows, IPSec <xref
          target="RFC4301"/>. For IP over Ethernet (Layer 2) flows using an underlying sub-net,
        MACSec <xref target="IEEE802.1AE-2018"/> may be appropriate. For some use cases packet
        integrity protection without encryption may be sufficient. </t>
      <t>However, if the DetNet nodes cannot decrypt IPsec traffic, then DetNet flow identification
        for encrypted IP traffic flows must be performed in a different way than it would be for
        unencrypted IP DetNet flows. The DetNet IP Data Plane identifies unencrypted flows via a
        6-tuple that consists of two IP addresses, the transport protocol ID, two transport protocol
        port numbers and the DSCP in the IP header. When IPsec is used, the transport header is
        encrypted and the next protocol ID is an IPsec protocol, usually ESP, and not a transport
        protocol, leaving only three components of the 6-tuple, which are the two IP addresses and
        the DSCP. If the IPsec sessions are established by a controller, then this controller could
        also transmit (in the clear) the Security Parameter Index (SPI) and thus the SPI could be
        used (in addition to the pair of IP addresses) for flow identification. Identification of
        DetNet flows over IPsec is further discussed in Section 5.1.2.3. of <xref target="RFC8939"
        />.</t>
      <t>Sections below discuss threats specific to IP and MPLS in more detail.</t>
      <section title="IP">
        <t>The IP protocol has a long history of security considerations and architectural
          protection mechanisms. From a data plane perspective DetNet does not add or modify any IP
          header information, so the carriage of DetNet traffic over an IP data plane does not
          introduce any new security issues that were not there before, apart from those already
          described in the data-plane-independent threats section <xref target="ThreatSection"/>,
          Security Threats. </t>
        <t>Thus the security considerations for a DetNet based on an IP data plane are purely
          inherited from the rich IP Security literature and code/application base, and the
          data-plane-independent section of this document. </t>
        <t>Maintaining security for IP segments of a DetNet may be more challenging than for the
          MPLS segments of the network, given that the IP segments of the network may reach the
          edges of the network, which are more likely to involve interaction with potentially
          malevolent outside actors. Conversely MPLS is inherently more secure than IP since it is
          internal to routers and it is well-known how to protect it from outside influence. </t>
        <t>Another way to look at DetNet IP security is to consider it in the light of VPN security;
          as an industry we have a lot of experience with VPNs running through networks with other
          VPNs, it is well known how to secure the network for that. However for a DetNet we have
          the additional subtlety that any possible interaction of one packet with another can have
          a potentially deleterious effect on the time properties of the flows. So the network must
          provide sufficient isolation between flows, for example by protecting the forwarding
          bandwidth and related resources so that they are available to detnet traffic, by whatever
          means are appropriate for the data plane of that network, for example through the use of
          queueing mechanisms. </t>
        <t>In a VPN, bandwidth is generally guaranteed over a period of time, whereas in DetNet it
          is not aggregated over time. This implies that any VPN-type protection mechanism must also
          maintain the DetNet timing constraints. </t>
      </section>
      <section title="MPLS">
        <t>An MPLS network carrying DetNet traffic is expected to be a "well-managed" network. Given
          that this is the case, it is difficult for an attacker to pass a raw MPLS encoded packet
          into a network because operators have considerable experience at excluding such packets at
          the network boundaries, as well as excluding MPLS packets being inserted through the use
          of a tunnel.</t>
        <t>MPLS security is discussed extensively in <xref target="RFC5920"/> ("Security Framework
          for MPLS and GMPLS Networks") to which the reader is referred. </t>
        <t>
          <xref target="RFC6941"/> builds on <xref target="RFC5920"/> by providing additional
          security considerations that are applicable to the MPLS-TP extensions appropriate to the
          MPLS Transport Profile <xref target="RFC5921"/>, and thus to the operation of DetNet over
          some types of MPLS network. </t>
        <t>
          <xref target="RFC5921"/> introduces to MPLS new Operations, Administration, and
          Maintenance (OAM) capabilities, a transport-oriented path protection mechanism, and strong
          emphasis on static provisioning supported by network management systems. </t>
        <t>The operation of DetNet over an MPLS network is modeled on the operation of multi-segment
          pseudowires (MS-PW). Thus for guidance on securing the DetNet elements of DetNet over MPLS
          the reader is referred to the MS-PW security mechanisms as defined in <xref
            target="RFC8077"/>, <xref target="RFC3931"/>, <xref target="RFC3985"/>, <xref
            target="RFC6073"/>, and <xref target="RFC6478"/>. </t>
        <t>Having attended to the conventional aspects of network security it is necessary to attend
          to the dynamic aspects. The closest experience that the IETF has with securing protocols
          that are sensitive to manipulation of delay are the two way time transfer protocols
          (TWTT), which are NTP <xref target="RFC5905"/> and Precision Time Protocol <xref
            target="IEEE1588"/>. The security requirements for these are described in <xref
            target="RFC7384"/>. </t>
        <t>One particular problem that has been observed in operational tests of TWTT protocols is
          the ability for two closely but not completely synchronized flows to beat and cause a
          sudden phase hit to one of the flows. This can be mitigated by the careful use of a
          scheduling system in the underlying packet transport. </t>
        <t>Further consideration of protection against dynamic attacks is work in progress. New work
          on MPLS security may also be applicable, for example <xref
            target="I-D.ietf-mpls-opportunistic-encrypt"/>. </t>
      </section>
    </section>
    <!-- Section: Technology Specific Attacks -->

    <!-- Possibly a 'Contributors' section ... -->
    <section anchor="IANA" title="IANA Considerations">
      <t>This document includes no requests from IANA.</t>
    </section>
    <section anchor="Security" title="Security Considerations">
      <t>The security considerations of DetNet networks are presented throughout this document. </t>
    </section>
    <section anchor="Privacy" title="Privacy Considerations">
      <t>Privacy in the context of DetNet is maintained by the base technologies specific to the
        DetNet and user traffic. For example TSN can use MACsec, IP can use IPsec, applications can
        use IP transport protocol-provided methods e.g. TLS and DTLS. MPLS typically uses L2/L3 VPNs
        combined with the previously mentioned privacy methods. </t>
    </section>
    <section title="Contributors">
      <t>The Editor would like to recognize the contributions of the following individuals to this
        draft. </t>
      <figure>
        <artwork><![CDATA[

    Subir Das (Applied Communication Sciences)
    150 Mount Airy Road, Basking Ridge, New Jersey, 07920, USA
    email sdas@appcomsci.com

    John Dowdell (Airbus Defence and Space)
    Celtic Springs, Newport, NP10 8FZ, United Kingdom
    email john.dowdell.ietf@gmail.com
      
    Henrik Austad (SINTEF Digital)
    Klaebuveien 153, Trondheim, 7037, Norway
    email henrik@austad.us

    Norman Finn (Huawei)
    3101 Rio Way, Spring Valley, California 91977, USA
    email nfinn@nfinnconsulting.com
    
    Stewart Bryant (Futurewei Technologies)
    
    email: stewart.bryant@gmail.com

    David Black (Dell EMC)
    176 South Street, Hopkinton, MA  01748, USA
    email: david.black@dell.com

    Carsten Bormann (Universitat Bremen TZI)
    Postfach 330440, D-28359 Bremen, Germany
    email: cabo@tzi.org


]]></artwork>
      </figure>
    </section>
  </middle>
  <!--  *****BACK MATTER ***** -->
  <back>
    <references title="Normative References">
      <?rfc include='reference.RFC.8939.xml'?>
      <?rfc include='reference.RFC.8938.xml'?>
      <?rfc include='reference.RFC.8655.xml'?>
    </references>
    <references title="Informative References">
      <?rfc include='reference.I-D.ietf-detnet-ip-oam.xml'?>
      <?rfc include='reference.I-D.ietf-detnet-mpls-oam.xml'?>
      <?rfc include='reference.I-D.ietf-detnet-mpls-over-udp-ip.xml'?>
      <?rfc include='reference.I-D.ietf-detnet-ip-over-mpls.xml'?>
      <!-- <?rfc include='reference.I-D.ietf-tictoc-1588overmpls'?>  -->
      <?rfc include='reference.I-D.varga-detnet-service-model.xml'?>
      <?rfc include='reference.I-D.ietf-detnet-flow-information-model.xml'?>
      <?rfc include='reference.I-D.ietf-detnet-ip-over-tsn.xml'?>
      <?rfc include='reference.I-D.ietf-mpls-opportunistic-encrypt.xml'?>
      <?rfc include='reference.I-D.ietf-ipsecme-g-ikev2.xml'?>
      <?rfc include='reference.RFC.2474.xml'?>
      <?rfc include='reference.RFC.2475.xml'?>
      <?rfc include='reference.RFC.3552.xml'?>
      <?rfc include='reference.RFC.3931.xml'?>
      <?rfc include='reference.RFC.3985.xml'?>
      <?rfc include='reference.RFC.4301.xml'?>
      <?rfc include='reference.RFC.5880.xml'?>
      <?rfc include='reference.RFC.5905.xml'?>
      <?rfc include='reference.RFC.5920.xml'?>
      <?rfc include='reference.RFC.5921.xml'?>
      <?rfc include='reference.RFC.6071.xml'?>
      <?rfc include='reference.RFC.6073.xml'?>
      <?rfc include='reference.RFC.6274.xml'?>
      <?rfc include='reference.RFC.6478.xml'?>
      <?rfc include='reference.RFC.6562.xml'?>
      <?rfc include='reference.RFC.6632.xml'?>
      <?rfc include='reference.RFC.6941.xml'?>
      <?rfc include='reference.RFC.7384.xml'?>
      <?rfc include='reference.RFC.7567.xml'?>
      <?rfc include='reference.RFC.7835.xml'?>
      <?rfc include='reference.RFC.8077.xml'?>
      <?rfc include='reference.RFC.8446.xml'?>
      <!-- DetNet RFCs:  -->
      <?rfc include='reference.RFC.8578.xml'?>

      <reference anchor="IETF_YANG_SEC"
        target="https://trac.ietf.org/trac/ops/wiki/yang-security-guidelines">
        <front>
          <title>YANG Module Security Considerations</title>
          <author>
            <organization>IETF</organization>
          </author>
          <date year="2018"/>
        </front>
      </reference>
      <reference anchor="IEEE1588">
        <front>
          <title>IEEE 1588 Standard for a Precision Clock Synchronization Protocol for Networked
            Measurement and Control Systems Version 2 </title>
          <author>
            <organization>IEEE</organization>
          </author>
          <date year="2008"/>
        </front>
      </reference>
      <reference anchor="ARINC664P7">
        <front>
          <title>ARINC 664 Aircraft Data Network, Part 7, Avionics Full-Duplex Switched Ethernet
            Network </title>
          <author>
            <organization>ARINC</organization>
          </author>
          <date year="2009"/>
        </front>
      </reference>
      <reference anchor="IEEE802.1AE-2018" target="https://ieeexplore.ieee.org/document/8585421">
        <front>
          <title>IEEE Std 802.1AE-2018 MAC Security (MACsec)</title>
          <author>
            <organization>IEEE Standards Association</organization>
          </author>
          <date year="2018"/>
        </front>
      </reference>
      <reference anchor="IEEE802.1Qch-2017" target="https://ieeexplore.ieee.org/document/7961303">
        <front>
          <title>IEEE Standard for Local and metropolitan area networks--Bridges and Bridged
            Networks--Amendment 29: Cyclic Queuing and Forwarding</title>
          <author>
            <organization>IEEE Standards Association</organization>
          </author>
          <date year="2017"/>
        </front>
      </reference>
      <reference anchor="IEEE802.1Qbv-2015" target="https://ieeexplore.ieee.org/document/8613095">
        <front>
          <title>IEEE Standard for Local and metropolitan area networks -- Bridges and Bridged
            Networks - Amendment 25: Enhancements for Scheduled Traffic</title>
          <author>
            <organization>IEEE Standards Association</organization>
          </author>
          <date year="2015"/>
        </front>
      </reference>
      <reference anchor="IEEE802.1BA" target="https://ieeexplore.ieee.org/document/6032690">
        <front>
          <title>IEEE Standard for Local and Metropolitan Area Networks -- Audio Video Bridging
            (AVB) Systems</title>
          <author>
            <organization>IEEE Standards Association</organization>
          </author>
          <date year="2011"/>
        </front>
      </reference>
      <reference anchor="IT_DEF" target="https://en.wikiquote.org/wiki/Information_technology">
        <front>
          <title>IT Definition</title>
          <author>
            <organization>Wikipedia</organization>
          </author>
          <date year="2020"/>
        </front>
      </reference>
      <reference anchor="OT_DEF" target="https://en.wikipedia.org/wiki/Operational_technology">
        <front>
          <title>OT Definition</title>
          <author>
            <organization>Wikipedia</organization>
          </author>
          <date year="2020"/>
        </front>
      </reference>
      <reference anchor="RS_DEF" target="https://en.wikipedia.org/wiki/Network_segmentation">
        <front>
          <title>RS Definition</title>
          <author>
            <organization>Wikipedia</organization>
          </author>
          <date year="2020"/>
        </front>
      </reference>
      <reference anchor="IEEE802.1Q" target="https://ieeexplore.ieee.org/document/6991462">
        <front>
          <title>IEEE Standard for Local and metropolitan area networks--Bridges and Bridged
            Networks - Annex J - Connectivity Fault Management </title>
          <author>
            <organization>IEEE Standards Association</organization>
          </author>
          <date year="2014"/>
        </front>
      </reference>
    </references>
    <!-- Change Log
v00 2017-02-22  TM   Initial version
v00 2017-03-09  EAG  Edited for clarity, incorporated comments from sdt review.
v01 2017-06-26  EAG  Added Impact, Mitigation and Use Case Associations text.
v01 2017-06-29  EAG  Integrated review input and Association by Use Case Industry text.
v00 2017-10-04  EAG  First post-WG-adoption (draft-ietf-detnet) version, version reset to 00.
                     Clarify text regarding "Flow Identification" vs "Flow Modification..."
                      1) Remove spurious "DetNet Flow Identification" section header,
                      2) Move 4.2.1. Flow identification text to a new Impact - Reconnaissance section.
                     Add missing sections to Impact section - even if empty, mark as ToDo.
                     Mention that impacts as described assume that mitigation is not present or has failed.
v00 2017-10-09 EAG   Rewrite use case themes questions as statements. Update use cases/threats table.
v00 2017-10-25 EAG   Add text for new use cases - to Intro, Industry table, Industry text, etc.
v02 2018-04-23 EAG   Just bump revision to keep draft alive.
v03 2018-10-16 EAG   Add OAM considerations section. Update Tal affiliation. Add new Commmon Theme: Bounded Jitter.
v04 2019-02-11 EAG   Add possible impact of DP delay on physical device e.g. Industrial per Rodney. Add Maik text to use case appendix.
v04 2019-03-02 EAG   Added Encryption Considerations section per list discussion.
v05 2019-08-29 EAG   Add sections for dataplane-specific considerations (IP, MPLS, TSN).
                     Update Use Cases references to RFC 8578.
v06 2019-11-02 EAG   Add placeholder text from Stewart for MPLS dataplane-specific considerations.
                     Removed Kevin Stanton as author. 
                     Added "dummy traffic insertion" based on Norm's comment.
                     Clarified that authentication is used for traffic origin verification (not encryption) per Henrik.
                     Added Packet Sequence Number Integrity Considerations per Norm comment.
                     Occasional auto-reformat changes.
v07 2020-01-10 EAG                        
                     Cut "security statements from drafts" (Appendix A). Add "Reader is assumed to be familiar with the other drafts". 
                     Limit scope to IP and MPLS. (i.e. cut TSN and references to future data planes)
                     Incorporate comment from IETF 106 that flow ID and OAM are the relevant differentiators between MPLS and IP data planes.
                    Note that MPLS is inherently more secure than IP since it is internal to routers.
                    Add assumption of a "very well managed network (both data plane and control plane)" as a starting place for this draft.
                    Incorporate some items from Stewart's review of 12/17/2019 and Henrik's comments 10Jan20. 
                    Replace "draft" with "document" where appropriate. 
                    Put in trivial text for "todo" sections. 
v08 2020-02-03 EAG                        
                    Incorporate more review items from Stewart's review of 12/17/2019 (expanded via phone call of 3Feb20).
v09 2020-03-17 EAG, Henrik
                    Address review items from Lou, email dated 16Mar20 
v10 2020-05-30 EAG
                    Address review items from David Black, email dated 21Apr20; this included creating new sections Component Design and DiffServ. 
v11 2020-08-14 EAG
                    Address the "simple" review items from Adrian Farrel IESG Routing Area review. Another pass will be required to address the deeper comments.
v12 2020-10-01 EAG
                    Address remaining items from Adrian Farrel IESG Routing Area review, and from Ben Kaduk, thanks to David, Stewart, Lou.
                    Move Andrew Hacker back to Author role. Move EAG to first author. 
v13 2020-12-11 EAG 
                    Addressed secdir AD review items from Russ Housely (done) and Yaron (still one more to go, but it is significant).

ToDo list:
              Validate use of words "attack" and "threat" is correct - prefer use of "attack" unless necessary.
              Add a new attack type for internal knowledge of drivers/firmware (as in Multiple Hops section)? Is this in scope?
              ?? Pascal pointed out that we could discuss attacks on the UNI, e.g. buffering
   -->

  </back>
</rfc>
